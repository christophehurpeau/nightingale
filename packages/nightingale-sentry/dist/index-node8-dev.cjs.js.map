{"version":3,"file":"index-node8-dev.cjs.js","sources":["../src/index.ts"],"sourcesContent":["import { Client as RavenClient, CaptureOptions } from 'raven';\nimport { Record, Handle } from 'nightingale-types';\nimport Level from 'nightingale-levels';\n\nconst mapToSentryLevel: { [level: number]: string } = {\n  [Level.TRACE]: 'debug',\n  [Level.DEBUG]: 'debug',\n  [Level.INFO]: 'info',\n  [Level.WARNING]: 'warning',\n  [Level.ERROR]: 'error',\n  [Level.FATAL]: 'fatal',\n  [Level.EMERGENCY]: 'fatal',\n};\n\nexport interface Options {\n  getUser?: <T>(record: Record<T>) => any;\n  getTags?: <T>(record: Record<T>) => any;\n  getReq?: <T>(record: Record<T>) => any;\n}\n\nexport interface MetadataWithError {\n  error?: Error;\n}\n\nconst createHandler = (\n  ravenUrl: string,\n  { getUser = () => {}, getTags = () => {}, getReq = () => {} }: Options = {},\n): Handle => {\n  const ravenClient = new RavenClient(ravenUrl);\n\n  return <T extends MetadataWithError>(record: Record<T>) => {\n    const { key, level, metadata, extra } = record;\n    const error = metadata && metadata.error;\n\n    if (!error) {\n      return;\n    }\n\n    const extraData = Object.assign({}, metadata, extra);\n    delete extraData.error;\n\n    ravenClient.captureException(error, {\n      logger: key, // logger is not in CaptureOptions but should work: merged later. TODO check and make a PR\n      level: mapToSentryLevel[level] || 'error',\n      extra: extraData,\n      user: getUser(record),\n      tags: getTags(record),\n      req: getReq(record),\n    } as CaptureOptions);\n  };\n};\n\nexport default class SentryHandler {\n  minLevel: Level;\n  handle: Handle;\n\n  constructor(ravenUrl: string, minLevel: number, options?: Options) {\n    this.minLevel = minLevel;\n    this.handle = createHandler(ravenUrl, options);\n  }\n}\n"],"names":["mapToSentryLevel","Level","TRACE","DEBUG","INFO","WARNING","ERROR","FATAL","EMERGENCY","createHandler","ravenUrl","ravenClient","RavenClient","record","error","metadata","extraData","Object","assign","extra","captureException","key","level","getUser","getTags","getReq","SentryHandler","minLevel","options","handle"],"mappings":";;;;;;;;;AAIA,MAAMA,mBAAgD;GACnDC,MAAMC,KAAP,GAAe,OADqC;GAEnDD,MAAME,KAAP,GAAe,OAFqC;GAGnDF,MAAMG,IAAP,GAAc,MAHsC;GAInDH,MAAMI,OAAP,GAAiB,SAJmC;GAKnDJ,MAAMK,KAAP,GAAe,OALqC;GAMnDL,MAAMM,KAAP,GAAe,OANqC;GAOnDN,MAAMO,SAAP,GAAmB;CAPrB;;AAoBA,MAAMC,gBAAgB,CACpBC,QADoB,EAEpB;YAAY,MAAM,EAAlB;YAAgC,MAAM,EAAtC;WAAmD,MAAM;IAAgB,EAFrD,KAGT;QACLC,cAAc,IAAIC,YAAJ,CAAgBF,QAAhB,CAApB;SAEqCG,MAA7B,IAAmD;UACnD;SAAA;WAAA;cAAA;;QAAkCA,MAAxC;UACMC,QAAQC,YAAYA,SAASD,KAAnC;;QAEI,CAACA,KAAL,EAAY;;;;UAINE,YAAYC,OAAOC,MAAP,CAAc,EAAd,EAAkBH,QAAlB,EAA4BI,KAA5B,CAAlB;WACOH,UAAUF,KAAjB;gBAEYM,gBAAZ,CAA6BN,KAA7B,EAAoC;cAC1BO,GAD0B;;aAE3BrB,iBAAiBsB,KAAjB,KAA2B,OAFA;aAG3BN,SAH2B;YAI5BO,QAAQV,MAAR,CAJ4B;YAK5BW,QAAQX,MAAR,CAL4B;WAM7BY,OAAOZ,MAAP;KANP;GAXF;CANF;;AA4BA,AAAe,MAAMa,aAAN,CAAoB;cAIrBhB,QAAZ,EAA8BiB,QAA9B,EAAgDC,OAAhD,EAAmE;SAHnED,QAGmE;SAFnEE,MAEmE;SAC5DF,QAAL,GAAgBA,QAAhB;SACKE,MAAL,GAAcpB,cAAcC,QAAd,EAAwBkB,OAAxB,CAAd;;;;;;;"}