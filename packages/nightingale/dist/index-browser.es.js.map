{"version":3,"file":"index-browser.es.js","sources":["../src/config.ts","../src/formatter-utils/levelToStyles.ts","../src/formatter-utils/levelToSymbol.ts","../src/formatter-utils/styleToHexColor.ts","../src/formatter-utils/styleToHtmlStyle.ts","../src/formatter-utils/formatObject.ts","../src/formatter-utils/formatRecordToString.ts","../src/debug/debug.ts","../src/formatters/RawFormatter.ts","../src/formatters/MarkdownFormatter.ts","../src/formatters/JSONFormatter.ts","../src/formatters/ANSIFormatter.ts","../src/formatters/HTMLFormatter.ts","../src/formatters/BrowserConsoleFormatter.ts","../src/outputs/consoleOutput.ts","../src/handlers/StringHandler.ts","../src/handlers/BrowserConsoleHandler.ts","../src/handlers/ConsoleHandler.ts","../src/index.ts"],"sourcesContent":["import type { ComputedConfigForKey, Config } from \"nightingale-logger\";\nimport type { Handler, Level } from \"nightingale-types\";\n\nconst globalOrWindow: typeof global =\n  typeof global !== \"undefined\" ? global : (window as typeof global);\n\nif (\n  process.env.NODE_ENV !== \"production\" &&\n  globalOrWindow.__NIGHTINGALE_GLOBAL_HANDLERS\n) {\n  throw new Error(\"nightingale: update all to ^5.0.0\");\n}\n\nif (!globalOrWindow.__NIGHTINGALE_CONFIG) {\n  globalOrWindow.__NIGHTINGALE_CONFIG = [];\n  globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map<\n    string,\n    ComputedConfigForKey\n  >();\n  globalOrWindow.__NIGHTINGALE_CONFIG_DEFAULT = {\n    handlers: [],\n    processors: [],\n  };\n}\n\nfunction clearCache(): void {\n  globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nfunction handleConfig(config: Config): Config {\n  if (config.keys) {\n    if (config.pattern) {\n      throw new Error(\"Cannot have key and pattern for the same config\");\n    }\n    if (config.key) {\n      throw new Error(\"Cannot have key and keys for the same config\");\n    }\n  } else if (config.key) {\n    if (config.pattern) {\n      throw new Error(\"Cannot have key and pattern for the same config\");\n    }\n    config.keys = [config.key];\n    delete config.key;\n  }\n\n  if (config.handler) {\n    if (config.handlers) {\n      throw new Error(\"Cannot have handler and handlers for the same config\");\n    }\n    config.handlers = [config.handler];\n    delete config.handler;\n  }\n\n  if (config.processor) {\n    if (config.processors) {\n      throw new Error(\n        \"Cannot have processors and processors for the same config\",\n      );\n    }\n    config.processors = [config.processor];\n    delete config.processor;\n  }\n\n  return config;\n}\n\nexport function configure(config: Config[]): void {\n  if (globalOrWindow.__NIGHTINGALE_CONFIG.length > 0) {\n    // eslint-disable-next-line no-console\n    console.log(\"nightingale: warning: config overridden\");\n  }\n\n  clearCache();\n  globalOrWindow.__NIGHTINGALE_CONFIG = config.map(handleConfig);\n}\n\nexport function addConfig(config: Config, unshift = false): void {\n  config = handleConfig(config);\n  globalOrWindow.__NIGHTINGALE_CONFIG[unshift ? \"unshift\" : \"push\"](config);\n  clearCache();\n}\n\nconst configIsForKey = (key: string) => (config: Config) => {\n  if (config.keys) return config.keys.includes(key);\n  if (config.pattern) return config.pattern.test(key);\n  return true;\n};\n\nglobalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = (\n  key: string,\n): ComputedConfigForKey => {\n  const globalCache = globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n  const existingCache = globalCache.get(key);\n\n  if (existingCache) {\n    return existingCache;\n  }\n\n  const loggerConfig: ComputedConfigForKey = {\n    handlers: [],\n    processors: [],\n  };\n\n  globalOrWindow.__NIGHTINGALE_CONFIG\n    .filter(configIsForKey(key))\n    .some((config: Config) => {\n      if (config.handlers) loggerConfig.handlers.push(...config.handlers);\n      if (config.processors) loggerConfig.processors.push(...config.processors);\n      return config.stop;\n    });\n\n  globalCache.set(key, loggerConfig);\n  return loggerConfig;\n};\n\nif (globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD) {\n  globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD = (\n    key: string,\n    level: Level,\n  ): ComputedConfigForKey => {\n    const { handlers, processors }: ComputedConfigForKey =\n      globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(key);\n\n    return {\n      handlers: handlers.filter(\n        (handler: Handler) =>\n          level >= handler.minLevel &&\n          (!handler.isHandling || handler.isHandling(level, key)),\n      ),\n      processors,\n    };\n  };\n}\n","import { Level } from \"nightingale-levels\";\n\nexport type LevelToStyles = Readonly<Record<number, string[]>>;\n\nexport const levelToStyles: LevelToStyles = {\n  [Level.TRACE]: [\"gray\"],\n  [Level.DEBUG]: [\"gray\"],\n  // [Level.INFO]: ['gray'],\n  [Level.WARN]: [\"yellow\"],\n  [Level.ERROR]: [\"red\", \"bold\"],\n  [Level.CRITICAL]: [\"red\", \"bold\"],\n  [Level.FATAL]: [\"bgRed\", \"white\"],\n  [Level.EMERGENCY]: [\"bgRed\", \"white\"],\n};\n","import { Level } from \"nightingale-levels\";\n\nexport type LevelToSymbol = Readonly<Record<number, string>>;\n\nexport const levelToSymbol: LevelToSymbol = {\n  [Level.TRACE]: \"•\",\n  [Level.DEBUG]: \"•\",\n  [Level.INFO]: \"→\",\n  [Level.WARN]: \"⚠\",\n  [Level.ERROR]: \"✖\",\n  [Level.CRITICAL]: \"!\",\n  [Level.FATAL]: \"‼\",\n  [Level.EMERGENCY]: \"‼\",\n};\n","export type StyleToHexColor = Readonly<Record<string, string>>;\n\nexport const styleToHexColor: StyleToHexColor = {\n  orange: \"ff5f00\",\n  grayLight: \"808080\",\n  \"gray-light\": \"808080\",\n};\n","import { styleToHexColor } from \"./styleToHexColor\";\n\nexport interface HtmlStyle {\n  readonly open: string;\n  readonly close: string;\n}\n\nexport type StyleToHtmlStyle = Readonly<Record<string, HtmlStyle>>;\n\nexport const styleToHtmlStyleThemeLight: StyleToHtmlStyle = {\n  // text style\n  bold: { open: \"font-weight: bold\", close: \"font-weight: normal\" },\n  italic: { open: \"font-style: italic\", close: \"font-style: normal\" },\n  underline: {\n    open: \"text-decoration: underline\",\n    close: \"text-decoration: none\",\n  },\n  inverse: {\n    open: \"unicode-bidi: bidi-override; direction: rtl\",\n    close: \"unicode-bidi: normal; direction: ltr\",\n  },\n  strikethrough: {\n    open: \"text-decoration: line-through\",\n    close: \"text-decoration: none\",\n  },\n\n  black: { open: \"color: black\", close: \"color: currentcolor\" },\n  red: { open: \"color: #ff0020\", close: \"color: currentcolor\" },\n  green: { open: \"color: #00b317\", close: \"color: currentcolor\" },\n  yellow: { open: \"color: #ffcc00\", close: \"color: currentcolor\" },\n  blue: { open: \"color: #00a0ff\", close: \"color: currentcolor\" },\n  magenta: { open: \"color: #ff00a0\", close: \"color: currentcolor\" },\n  cyan: { open: \"color: #00cfd8\", close: \"color: currentcolor\" },\n  white: { open: \"color: white\", close: \"color: currentcolor\" },\n  gray: { open: \"color: gray\", close: \"color: currentcolor\" },\n\n  bgBlack: { open: \"background: black\", close: \"background: initial\" },\n  bgRed: { open: \"background: #ff0020\", close: \"background: initial\" },\n  bgGreen: { open: \"background: #00b317\", close: \"background: initial\" },\n  bgYellow: { open: \"background: #ffcc00\", close: \"background: initial\" },\n  bgBlue: { open: \"background: #00a0ff\", close: \"background: initial\" },\n  bgMagenta: { open: \"background: #ff00a0\", close: \"background: initial\" },\n  bgCyan: { open: \"background: #00cfd8\", close: \"background: initial\" },\n  bgWhite: { open: \"background: white\", close: \"background: initial\" },\n\n  orange: {\n    open: `color: #${styleToHexColor.orange}`,\n    close: \"color: currentcolor\",\n  },\n  grayLight: {\n    open: `color: #${styleToHexColor.grayLight}`,\n    close: \"color: currentcolor\",\n  },\n  \"gray-light\": {\n    open: `color: #${styleToHexColor.grayLight}`,\n    close: \"color: currentcolor\",\n  },\n};\n\nexport const styleToHtmlStyleThemeDark: StyleToHtmlStyle = {\n  ...styleToHtmlStyleThemeLight,\n  black: styleToHtmlStyleThemeLight.white,\n  bgBlack: styleToHtmlStyleThemeLight.bgWhite,\n  white: styleToHtmlStyleThemeLight.black,\n  bgWhite: styleToHtmlStyleThemeLight.bgBlack,\n  gray: { open: \"color: lightgray\", close: \"color: currentcolor\" },\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type { Styles } from \"nightingale-types\";\n\nexport interface FormatObjectOptions {\n  padding?: string;\n  maxDepth?: number;\n}\n\nexport type StyleFn = (styles: Styles, value: string) => string;\n\nexport type ObjectStyles<Keys extends string = string> = Record<Keys, Styles>;\n\nconst noStyleFn: StyleFn = (styles: Styles, value: string): string => value;\n\ninterface InternalFormatParams {\n  padding: string;\n  depth: number;\n  maxDepth: number;\n  objects: Set<unknown>;\n}\n\ninterface FormattedKey {\n  stringKey: string;\n  formattedKey: string;\n}\n\ntype FormatKey<Key> = (\n  key: Key,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n) => FormattedKey;\n\ninterface Value<Key> {\n  key: Key;\n  value: unknown;\n}\n\ninterface FormattedValue {\n  stringValue: string;\n  formattedValue: string;\n}\n\ntype Values<Key> = Value<Key>[];\n\ninterface InternalFormatIteratorParams<Key> {\n  prefix: string;\n  suffix: string;\n  formatKey: FormatKey<Key>;\n  prefixSuffixSpace?: string;\n}\n\nfunction tryStringify(arg: unknown): string {\n  try {\n    return JSON.stringify(arg).replace(/\\\\n/g, \"\\n\");\n  } catch {\n    return \"[Circular]\";\n  }\n}\n\nconst sameRawFormattedValue = (value: string): FormattedValue => ({\n  stringValue: value,\n  formattedValue: value,\n});\n\nfunction internalFormatValue(\n  value: unknown,\n  styleFn: StyleFn,\n  styles: Styles,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value == null) {\n      styles = [\"cyan\"];\n    } else {\n      switch (typeofValue) {\n        case \"undefined\":\n          styles = [\"cyan\"];\n          break;\n        case \"boolean\":\n          styles = [\"green\"];\n          break;\n        case \"number\":\n          styles = [\"yellow\"];\n          break;\n        case \"bigint\":\n          styles = [\"red\"];\n          break;\n        case \"string\":\n          styles = [\"orange\"];\n          break;\n        case \"symbol\":\n          styles = [\"magenta\"];\n          break;\n        case \"object\":\n        case \"function\":\n        default:\n          break;\n      }\n    }\n  }\n\n  let stringValue: string;\n  if (value === null) {\n    stringValue = \"null\";\n  } else if (value === undefined) {\n    stringValue = \"undefined\";\n  } else if (typeofValue === \"boolean\") {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    stringValue = (value as any).toString() as string;\n  } else if ((value as () => unknown).constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = \"{Object...}\";\n    } else {\n      return internalFormatObject(\n        value as Record<string, unknown>,\n        styleFn,\n        undefined,\n        {\n          padding,\n          depth: depth + 1,\n          maxDepth,\n          objects,\n        },\n      );\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = \"[Array...]\";\n    } else {\n      return internalFormatArray(value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Error) {\n    const stack = value.stack;\n    stringValue =\n      stack?.startsWith(value.message) ||\n      stack?.startsWith(`${value.name}: ${value.message}`)\n        ? stack\n        : `${value.message}\\n${stack || \"\"}`;\n  } else if (value instanceof Map) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatMap(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (typeofValue === \"bigint\") {\n    stringValue = (value as bigint).toString();\n  } else if (typeofValue === \"symbol\") {\n    stringValue = (value as symbol).toString();\n  } else if (value instanceof Set) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatSet(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof WeakMap) {\n    stringValue = \"{WeakMap...}\";\n  } else if (value instanceof WeakSet) {\n    stringValue = \"{WeakSet...}\";\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = \",\";\n\nconst internalFormatKey: FormatKey<string> = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return {\n    stringKey: `${key}: `,\n    formattedKey: `${styleFn([\"gray-light\", \"bold\"], `${key}:`)} `,\n  };\n};\n\nconst internalNoKey: FormatKey<undefined> = (\n  key: string | undefined,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return { stringKey: \"\", formattedKey: \"\" };\n};\n\nconst internalFormatMapKey: FormatKey<unknown> = (\n  key: unknown,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  const { stringValue, formattedValue } = internalFormatValue(\n    key,\n    noStyleFn,\n    undefined,\n    internalFormatParams,\n  );\n  return {\n    stringKey: `${stringValue} => `,\n    formattedKey: `${styleFn([\"gray-light\", \"bold\"], `${formattedValue}:`)} `,\n  };\n};\n\nconst internalFormatIterator = <Key>(\n  values: Values<Key>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n  {\n    prefix,\n    suffix,\n    prefixSuffixSpace = \" \",\n    formatKey,\n  }: InternalFormatIteratorParams<Key>,\n): FormattedValue => {\n  let breakLine = false;\n  const formattedSeparator = (): string => styleFn([\"gray\"], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  const formattedValues: FormattedValue[] = values.map(\n    ({ key, value }, index: number) => {\n      const nextDepth = depth + 1;\n      const internalFormatParams = {\n        padding,\n        depth: nextDepth,\n        maxDepth,\n        objects,\n      };\n\n      // key must be formatted before value (browser-formatter needs order)\n      const { stringKey, formattedKey } = formatKey(\n        key,\n        styleFn,\n        internalFormatParams,\n      );\n\n      let { stringValue, formattedValue } = internalFormatValue(\n        value,\n        styleFn,\n        key && objectStyles\n          ? objectStyles[key as unknown as string]\n          : undefined,\n        internalFormatParams,\n      );\n\n      if (\n        stringValue &&\n        (stringValue.length > 80 || stringValue.includes(\"\\n\"))\n      ) {\n        breakLine = true;\n        stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n        formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n      }\n\n      return {\n        stringValue:\n          stringKey + stringValue + (index === valuesMaxIndex ? \"\" : separator),\n        formattedValue:\n          formattedKey +\n          formattedValue +\n          (index === valuesMaxIndex ? \"\" : formattedSeparator()),\n        // note: we need to format the separator for each values for browser-formatter\n      };\n    },\n  );\n\n  return {\n    stringValue:\n      prefix +\n      formattedValues\n        .map(\n          breakLine\n            ? (v) => `\\n${padding}${v.stringValue}`\n            : (fv) => fv.stringValue,\n        )\n        .join(breakLine ? \"\\n\" : \" \") +\n      suffix,\n    formattedValue: `${prefix}${\n      breakLine ? \"\" : prefixSuffixSpace\n    }${formattedValues\n      .map(\n        breakLine\n          ? (v) => `\\n${padding}${v.formattedValue}`\n          : (v) => v.formattedValue,\n      )\n      .join(breakLine ? \"\" : \" \")}${\n      breakLine ? \",\\n\" : prefixSuffixSpace\n    }${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(object)) {\n    return sameRawFormattedValue(\"{Circular Object}\");\n  }\n\n  const keys: string[] = Object.keys(object);\n  if (keys.length === 0) {\n    return sameRawFormattedValue(\"{}\");\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: object[key] })),\n    styleFn,\n    objectStyles,\n    { padding, depth, maxDepth, objects },\n    { prefix: \"{\", suffix: \"}\", formatKey: internalFormatKey },\n  );\n\n  objects.delete(object);\n\n  return result;\n}\n\nfunction internalFormatMap(\n  name: string,\n  map: Map<unknown, unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(map)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const keys = [...map.keys()];\n  if (keys.length === 0) {\n    return sameRawFormattedValue(`${name} {}`);\n  }\n\n  objects.add(map);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: map.get(key) })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} {`, suffix: \"}\", formatKey: internalFormatMapKey },\n  );\n\n  objects.delete(map);\n\n  return result;\n}\n\nfunction internalFormatArray(\n  array: unknown[],\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(array)) {\n    return sameRawFormattedValue(\"{Circular Array}\");\n  }\n\n  if (array.length === 0) {\n    return sameRawFormattedValue(\"[]\");\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    {\n      prefix: \"[\",\n      suffix: \"]\",\n      prefixSuffixSpace: \"\",\n      formatKey: internalNoKey,\n    },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nfunction internalFormatSet(\n  name: string,\n  set: Set<unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(set)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const values = [...set.values()];\n  if (values.length === 0) {\n    return sameRawFormattedValue(`${name} []`);\n  }\n\n  objects.add(set);\n\n  const result = internalFormatIterator(\n    values.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} [`, suffix: \"]\", formatKey: internalNoKey },\n  );\n\n  objects.delete(set);\n\n  return result;\n}\n\nexport function formatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn = noStyleFn,\n  objectStyles?: ObjectStyles,\n  { padding = \"  \", maxDepth = 10 }: FormatObjectOptions = {},\n): string {\n  const { formattedValue: result } = internalFormatObject(\n    object,\n    styleFn,\n    objectStyles,\n    {\n      padding,\n      maxDepth,\n      depth: 0,\n      objects: new Set(),\n    },\n  );\n\n  if (result === \"{}\") {\n    return \"\";\n  }\n\n  return result;\n}\n","import type { LogRecord, Metadata } from \"nightingale-types\";\nimport type { StyleFn, ObjectStyles } from \"./formatObject\";\nimport { formatObject } from \"./formatObject\";\nimport { levelToStyles } from \"./levelToStyles\";\nimport { levelToSymbol } from \"./levelToSymbol\";\n\nexport function formatRecordToString<T extends Metadata>(\n  record: LogRecord<T>,\n  style: StyleFn,\n): string {\n  const parts: string[] = [];\n\n  if (record.displayName) {\n    parts.push(style([\"gray-light\"], record.displayName));\n  } else if (record.key) {\n    parts.push(style([\"gray-light\"], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(\n      style([\"gray\", \"bold\"], record.datetime.toTimeString().split(\" \")[0]),\n    );\n    /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message: string = record.symbol || levelToSymbol[record.level];\n  const styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  const formatRecordObject = (\n    key: string,\n    object: Record<string, unknown> | undefined,\n    objectStyles: ObjectStyles | undefined,\n  ): void => {\n    if (!object) {\n      return;\n    }\n\n    const stringObject = formatObject(object, style, objectStyles);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  };\n\n  formatRecordObject(\"metadata\", record.metadata, record.metadataStyles);\n  formatRecordObject(\"extra\", record.extra, undefined);\n  formatRecordObject(\"context\", record.context, undefined);\n\n  return parts.join(\" \");\n}\n","/* eslint-disable complexity */\nimport { Level } from \"nightingale-levels\";\n\nconst specialRegexpChars = /[$()+.?[\\\\\\]^{|}]/;\n\ntype TestFunction = (string: string) => boolean;\nexport type DebugValueType = RegExp | string[] | string;\n\nconst createTestFunctionFromRegexp =\n  (regexp: RegExp): TestFunction =>\n  (string: string) =>\n    regexp.test(string);\n\nconst createTestFunctionFromRegexpString = (value: string): TestFunction => {\n  if (!value.endsWith(\"/\")) throw new Error(\"Invalid RegExp DEBUG value\");\n  return createTestFunctionFromRegexp(new RegExp(value.slice(1, -1)));\n};\n\nconst createTestFunctionFromValue = (value: string): TestFunction => {\n  if (value.endsWith(\":*\")) {\n    value = value.slice(0, -2);\n    return (string: string) => string.startsWith(value);\n  }\n\n  return (string: string) => string === value;\n};\n\nexport type FindDebugLevel = (minLevel: Level, key: string) => Level;\n\nexport function createFindDebugLevel(\n  debugValue?: DebugValueType,\n): FindDebugLevel {\n  let isWildcard = false;\n  const debugValues: TestFunction[] = [];\n  const skips: TestFunction[] = [];\n\n  if (!Array.isArray(debugValue)) {\n    if (debugValue instanceof RegExp) {\n      debugValues.push(createTestFunctionFromRegexp(debugValue));\n      debugValue = undefined;\n    } else if (debugValue) {\n      debugValue = debugValue.trim();\n\n      if (debugValue.startsWith(\"/\")) {\n        debugValues.push(createTestFunctionFromRegexpString(debugValue));\n        debugValue = undefined;\n      } else {\n        debugValue = debugValue.split(/[\\s,]+/);\n      }\n    }\n  }\n\n  if (debugValue) {\n    (debugValue as string[]).forEach((value) => {\n      if (specialRegexpChars.test(value)) {\n        throw new Error(\n          `Invalid debug value: \"${value}\" (contains special chars)`,\n        );\n      }\n\n      if (!value) return;\n\n      if (value === \"*\") {\n        isWildcard = true;\n        return;\n      }\n\n      if (value.startsWith(\"-\")) {\n        skips.push(createTestFunctionFromValue(value.slice(1)));\n      } else if (!isWildcard) {\n        debugValues.push(createTestFunctionFromValue(value));\n      }\n    });\n  }\n\n  if (isWildcard) {\n    if (skips.length === 0) {\n      return () => Level.ALL;\n    } else {\n      return (minLevel: Level, key: string) =>\n        skips.some((skip) => skip(key)) ? minLevel : Level.ALL;\n    }\n  }\n\n  if (debugValues.length === 0) {\n    return (minLevel: Level) => minLevel;\n  }\n\n  return (minLevel: Level, key: string) => {\n    if (minLevel === Level.ALL || !key) {\n      return minLevel;\n    }\n\n    if (debugValues.some((dv) => dv(key))) {\n      return skips.some((skip) => skip(key)) ? minLevel : Level.ALL;\n    }\n\n    return minLevel;\n  };\n}\n","import type { Styles } from \"nightingale-types\";\nimport type { NightingaleFormatter } from \"../formatter-utils\";\nimport { formatRecordToString } from \"../formatter-utils\";\n\nexport function style(styles: Styles, value: string): string {\n  return value;\n}\n\nexport const RawFormatter: NightingaleFormatter = {\n  format(record) {\n    return formatRecordToString(record, style);\n  },\n};\n","import type { Styles } from \"nightingale-types\";\nimport type { NightingaleFormatter } from \"../formatter-utils\";\nimport { formatRecordToString } from \"../formatter-utils\";\n\nexport function style(styles: Styles, string: string): string {\n  if (!styles || styles.length === 0 || !string) {\n    return string;\n  }\n\n  // eslint-disable-next-line unicorn/no-array-reduce\n  return styles.reduce((part, styleName) => {\n    switch (styleName) {\n      case \"bold\":\n        return `*${part}*`;\n      case \"italic\":\n        return `_${part}_`;\n      case \"strikethrough\":\n        return `~${part}~`;\n\n      // no default\n    }\n\n    return part;\n  }, string);\n}\n\nexport const MarkdownFormatter: NightingaleFormatter = {\n  format(record) {\n    return formatRecordToString(record, style);\n  },\n};\n","import type { NightingaleFormatter } from \"../formatter-utils\";\n\nfunction map2object(map: Map<unknown, unknown>): unknown {\n  const object: Record<string, unknown> = {};\n\n  map.forEach((value, key) => {\n    if (typeof key === \"object\") {\n      // ignore key\n      return;\n    }\n\n    object[String(key)] = value;\n  });\n\n  return object;\n}\n\nfunction stringify(value: unknown, space?: number | string): string {\n  return JSON.stringify(\n    value,\n    (key, objectValue) => {\n      if (objectValue instanceof Map) {\n        return map2object(objectValue);\n      }\n      if (objectValue instanceof Error) {\n        return {\n          message: objectValue.message,\n          stack: objectValue.stack,\n        };\n      }\n\n      return objectValue as unknown;\n    },\n    space,\n  );\n}\n\nexport const JSONFormatter: NightingaleFormatter = {\n  format(record) {\n    return stringify({\n      key: record.key,\n      level: record.level,\n      datetime: record.datetime,\n      message: record.message,\n      metadata: record.metadata,\n      extra: record.extra,\n    });\n  },\n};\n","import ansi from \"ansi-styles\";\nimport type { NightingaleFormatter } from \"nightingale\";\nimport type { Styles } from \"nightingale-types\";\nimport { styleToHexColor, formatRecordToString } from \"../formatter-utils\";\n\nexport type { Styles } from \"nightingale-types\";\n\ninterface CodePair {\n  open: string;\n  close: string;\n}\n\ntype AnsiStyles = Record<string, CodePair | undefined>;\n\nconst ansiStyles: AnsiStyles = {\n  black: ansi.black,\n  red: ansi.red,\n  green: ansi.green,\n  yellow: ansi.yellow,\n  blue: ansi.blue,\n  magenta: ansi.magenta,\n  cyan: ansi.cyan,\n  white: ansi.white,\n  gray: ansi.gray,\n\n  bgBlack: ansi.bgBlack,\n  bgRed: ansi.bgRed,\n  bgGreen: ansi.bgGreen,\n  bgYellow: ansi.bgYellow,\n  bgBlue: ansi.bgBlue,\n  bgMagenta: ansi.bgMagenta,\n  bgCyan: ansi.bgCyan,\n  bgWhite: ansi.bgWhite,\n\n  bold: ansi.bold,\n  underline: ansi.underline,\n\n  // http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html\n  orange: {\n    open: ansi.color.ansi256(ansi.hexToAnsi256(styleToHexColor.orange)),\n    close: ansi.color.close,\n  },\n  \"gray-light\": {\n    open: ansi.color.ansi256(ansi.hexToAnsi256(styleToHexColor[\"gray-light\"])),\n    close: ansi.color.close,\n  },\n};\n\nexport function style(styles: Styles, string: string): string {\n  if (!styles || styles.length === 0 || !string) {\n    return string;\n  }\n\n  // eslint-disable-next-line unicorn/no-array-reduce\n  return styles.reduce((styledString: string, styleName: string) => {\n    const codePair: CodePair | undefined = ansiStyles[styleName];\n\n    if (!codePair) {\n      throw new Error(`Unknown style: ${styleName}`);\n    }\n\n    return codePair.open + styledString + codePair.close;\n  }, string);\n}\n\nexport const ANSIFormatter: NightingaleFormatter = {\n  format: (record) => formatRecordToString(record, style),\n};\n","import type { Styles } from \"nightingale-types\";\nimport type { NightingaleFormatter } from \"../formatter-utils\";\nimport {\n  formatRecordToString,\n  styleToHtmlStyleThemeLight,\n} from \"../formatter-utils\";\n\nexport function style(styles: Styles, string: string): string {\n  if (!styles || styles.length === 0 || !string) {\n    return string;\n  }\n\n  return `<span style=\"${styles\n    .map((styleName: string) => styleToHtmlStyleThemeLight[styleName].open)\n    .join(\"; \")}\">${string}</span>`;\n}\n\nexport const HTMLFormatter: NightingaleFormatter = {\n  format(record) {\n    return formatRecordToString(record, style);\n  },\n};\n","import type { StyleToHtmlStyle } from \"nightingale\";\nimport type { LogRecord, Metadata, Styles } from \"nightingale-types\";\nimport {\n  formatRecordToString,\n  styleToHtmlStyleThemeLight,\n  styleToHtmlStyleThemeDark,\n} from \"../formatter-utils\";\nimport type { StringArrayNightingaleFormatter } from \"../formatter-utils\";\n\nexport const style =\n  (styleToHtmlStyle: StyleToHtmlStyle, args: string[]) =>\n  (styles: Styles, string: string): string => {\n    if (!styles || styles.length === 0 || !string) {\n      return string;\n    }\n\n    const htmlStyles = styles.map((styleName) => styleToHtmlStyle[styleName]);\n    args.push(\n      htmlStyles.map((s) => s.open).join(\"; \"),\n      htmlStyles.map((s) => s.close).join(\"; \"),\n    );\n    return `%c${string}%c`;\n  };\n\nexport class BrowserConsoleFormatter\n  implements StringArrayNightingaleFormatter\n{\n  styleToHtmlStyle: StyleToHtmlStyle;\n  constructor(theme: \"dark\" | \"light\" = \"light\") {\n    this.styleToHtmlStyle =\n      theme === \"dark\" ? styleToHtmlStyleThemeDark : styleToHtmlStyleThemeLight;\n  }\n\n  format<T extends Metadata>(record: LogRecord<T>): string[] {\n    const args: string[] = [];\n    const string = formatRecordToString(\n      record,\n      style(this.styleToHtmlStyle, args),\n    );\n    return [string, ...args];\n  }\n}\n","/* eslint-disable no-console */\nimport { POB_TARGET } from \"pob-babel\";\nimport { Level } from \"nightingale-levels\";\nimport type { LogRecord, Metadata } from \"nightingale-types\";\n\nexport function consoleOutput<T extends Metadata>(\n  param: string[] | string,\n  record: LogRecord<T>,\n): void {\n  if (POB_TARGET !== \"browser\") {\n    const outKey = record.level >= Level.ERROR ? \"stderr\" : \"stdout\";\n    process[outKey].write(`${param as string}\\n`);\n  } else {\n    console[record.level >= Level.ERROR ? \"error\" : \"log\"](...param);\n  }\n}\n","/* eslint-disable prefer-template */\nimport type { Handler, Level, LogRecord, Metadata } from \"nightingale-types\";\nimport { RawFormatter } from \"../formatters/RawFormatter\";\n\nexport class StringHandler implements Handler {\n  readonly minLevel: Level;\n\n  private _buffer = \"\";\n\n  constructor(minLevel: Level) {\n    this.minLevel = minLevel;\n  }\n\n  get string(): string {\n    return this._buffer;\n  }\n\n  handle<T extends Metadata>(record: LogRecord<T>): void {\n    this._buffer += RawFormatter.format(record) + \"\\n\";\n  }\n}\n","import type {\n  Level,\n  Handle,\n  IsHandling,\n  LogRecord,\n  Metadata,\n  Handler,\n} from \"nightingale-types\";\nimport { createFindDebugLevel } from \"../debug/debug\";\nimport { BrowserConsoleFormatter } from \"../formatters/BrowserConsoleFormatter\";\nimport { consoleOutput } from \"../outputs/consoleOutput\";\n\nexport function getDebugString(): string {\n  const querystring = document.location.search;\n  const debugFromLocalStorage =\n    (window.localStorage && localStorage.getItem(\"debug\")) || \"\";\n\n  if (!querystring) {\n    return debugFromLocalStorage;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/URLUtils/search#Get_the_value_of_a_single_search_param\n  const debugFromQueryString = decodeURI(\n    querystring.replace(\n      // eslint-disable-next-line prefer-regex-literals\n      new RegExp(\"^(?:.*[&\\\\?]DEBUG(?:\\\\=([^&]*))?)?.*$\", \"i\"),\n      \"$1\",\n    ),\n  );\n\n  return (\n    (debugFromLocalStorage ? `${debugFromLocalStorage},` : \"\") +\n    debugFromQueryString\n  );\n}\n\n// debug string can change any time (localStorage), so we need a new object each time.\nconst findDebugLevel = (minLevel: Level, key: string): Level =>\n  createFindDebugLevel(getDebugString())(minLevel, key);\n\ntype Theme = \"dark\" | \"light\";\n\nconst getDefaultTheme = (): Theme => {\n  try {\n    const configInLocalStorage = localStorage.getItem(\"NIGHTINGALE_THEME\");\n    if (configInLocalStorage && configInLocalStorage === \"dark\") {\n      return configInLocalStorage;\n    }\n  } catch {}\n  return \"light\";\n};\n\nconst createHandler = (theme: Theme = getDefaultTheme()): Handle => {\n  const browserConsoleFormatter = new BrowserConsoleFormatter(theme);\n  return <T extends Metadata>(record: LogRecord<T>) => {\n    consoleOutput(browserConsoleFormatter.format(record), record);\n  };\n};\n\nexport interface BrowserConsoleHandlerOptions {\n  theme?: Theme;\n}\n\nexport class BrowserConsoleHandler implements Handler {\n  minLevel: Level = 0;\n\n  handle: Handle;\n\n  isHandling: IsHandling;\n\n  constructor(minLevel: Level, options: BrowserConsoleHandlerOptions = {}) {\n    this.isHandling = (level: Level, key: string) =>\n      level >= findDebugLevel(minLevel, key);\n\n    this.handle = createHandler(options.theme);\n  }\n}\n","import { POB_TARGET } from \"pob-babel\";\nimport { Level } from \"nightingale-levels\";\nimport type {\n  IsHandling,\n  Handle,\n  LogRecord,\n  Metadata,\n  Handler,\n} from \"nightingale-types\";\nimport { createFindDebugLevel } from \"../debug/debug\";\nimport { ANSIFormatter } from \"../formatters/ANSIFormatter\";\nimport { JSONFormatter } from \"../formatters/JSONFormatter\";\nimport { consoleOutput } from \"../outputs/consoleOutput\";\n\nconst defaultFormatter =\n  POB_TARGET === \"node\" &&\n  !process.stdout.isTTY &&\n  process.env.NIGHTINGALE_CONSOLE_FORMATTER !== \"ansi\"\n    ? JSONFormatter.format\n    : ANSIFormatter.format;\n\nconst createHandle = (\n  formatter = defaultFormatter,\n  output = consoleOutput,\n): Handle => {\n  return <T extends Metadata>(record: LogRecord<T>): void => {\n    output(formatter(record), record);\n  };\n};\nconst findDebugLevel = createFindDebugLevel(process.env.DEBUG);\n\nexport interface ConsoleHandlerOptions {\n  formatter?: <T extends Metadata>(record: LogRecord<T>) => string;\n  output?: <T extends Metadata>(\n    param: string[] | string,\n    record: LogRecord<T>,\n  ) => void;\n  // compat with nightingale-app-console, not used yet\n  theme?: \"dark\" | \"light\";\n}\n\nexport class ConsoleHandler implements Handler {\n  minLevel: Level = Level.ALL;\n\n  isHandling: IsHandling;\n\n  handle: Handle;\n\n  constructor(minLevel: Level, options: ConsoleHandlerOptions = {}) {\n    this.minLevel = minLevel;\n    this.isHandling = (level: Level, key: string) =>\n      level >= findDebugLevel(minLevel, key);\n    this.handle = createHandle(options.formatter, options.output);\n  }\n}\n","import { Logger } from \"nightingale-logger\";\n\nexport { Logger } from \"nightingale-logger\";\nexport { Level, Level as levels } from \"nightingale-levels\";\nexport { configure, addConfig } from \"./config\";\n\nexport * from \"./formatter-utils\";\nexport { createFindDebugLevel } from \"./debug/debug\";\nexport { RawFormatter } from \"./formatters/RawFormatter\";\nexport { MarkdownFormatter } from \"./formatters/MarkdownFormatter\";\nexport { JSONFormatter } from \"./formatters/JSONFormatter\";\nexport { ANSIFormatter } from \"./formatters/ANSIFormatter\";\nexport { HTMLFormatter } from \"./formatters/HTMLFormatter\";\nexport { BrowserConsoleFormatter } from \"./formatters/BrowserConsoleFormatter\";\nexport { consoleOutput } from \"./outputs/consoleOutput\";\nexport { StringHandler } from \"./handlers/StringHandler\";\nexport { BrowserConsoleHandler } from \"./handlers/BrowserConsoleHandler\";\nexport { ConsoleHandler } from \"./handlers/ConsoleHandler\";\n\n/**\n * listen to uncaughtException and unhandledRejection\n * @param {Logger} [logger]\n */\nexport function listenUnhandledErrors(\n  logger: Logger = new Logger(\n    \"nightingale:listenUnhandledErrors\",\n    \"UnhandledErrors\",\n  ),\n): void {\n  process.on(\"uncaughtException\", (error) => {\n    logger.error(error, {\n      unhandled: true,\n      type: \"uncaughtException\",\n    });\n  });\n  process.on(\"unhandledRejection\", (error) => {\n    logger.error(error as Error, {\n      unhandled: true,\n      type: \"unhandledRejection\",\n    });\n  });\n}\n"],"names":["globalOrWindow","global","window","process","env","NODE_ENV","__NIGHTINGALE_GLOBAL_HANDLERS","Error","__NIGHTINGALE_CONFIG","__NIGHTINGALE_LOGGER_MAP_CACHE","Map","__NIGHTINGALE_CONFIG_DEFAULT","handlers","processors","clearCache","clear","handleConfig","config","keys","pattern","key","handler","processor","configure","length","console","log","map","addConfig","unshift","configIsForKey","includes","test","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","globalCache","existingCache","get","loggerConfig","filter","some","push","stop","set","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD","level","minLevel","isHandling","levelToStyles","Level","TRACE","DEBUG","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","levelToSymbol","INFO","styleToHexColor","orange","grayLight","styleToHtmlStyleThemeLight","bold","open","close","italic","underline","inverse","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","styleToHtmlStyleThemeDark","noStyleFn","styles","value","tryStringify","arg","JSON","stringify","replace","sameRawFormattedValue","stringValue","formattedValue","internalFormatValue","styleFn","padding","depth","maxDepth","objects","typeofValue","undefined","toString","constructor","Object","internalFormatObject","Array","isArray","internalFormatArray","stack","startsWith","message","name","internalFormatMap","Set","internalFormatSet","WeakMap","WeakSet","separator","internalFormatKey","stringKey","formattedKey","internalNoKey","internalFormatMapKey","internalFormatParams","internalFormatIterator","values","objectStyles","prefix","suffix","prefixSuffixSpace","formatKey","breakLine","formattedSeparator","valuesMaxIndex","formattedValues","index","v","fv","join","object","has","add","result","delete","array","formatObject","formatRecordToString","record","style","parts","displayName","datetime","toTimeString","split","symbol","formatRecordObject","stringObject","metadata","metadataStyles","extra","context","specialRegexpChars","createTestFunctionFromRegexp","regexp","string","createTestFunctionFromRegexpString","endsWith","RegExp","slice","createTestFunctionFromValue","createFindDebugLevel","debugValue","isWildcard","debugValues","skips","trim","forEach","ALL","skip","dv","RawFormatter","format","reduce","part","styleName","MarkdownFormatter","map2object","String","space","objectValue","JSONFormatter","ansiStyles","ansi","color","ansi256","hexToAnsi256","styledString","codePair","ANSIFormatter","HTMLFormatter","styleToHtmlStyle","args","htmlStyles","s","BrowserConsoleFormatter","theme","consoleOutput","param","StringHandler","_buffer","handle","getDebugString","querystring","document","location","search","debugFromLocalStorage","localStorage","getItem","debugFromQueryString","decodeURI","findDebugLevel","getDefaultTheme","configInLocalStorage","createHandler","browserConsoleFormatter","BrowserConsoleHandler","options","defaultFormatter","createHandle","formatter","output","ConsoleHandler","listenUnhandledErrors","logger","Logger","on","error","unhandled","type"],"mappings":"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"}