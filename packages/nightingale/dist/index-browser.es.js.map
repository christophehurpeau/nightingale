{"version":3,"file":"index-browser.es.js","sources":["../src/config.ts","../src/formatter-utils/levelToStyles.ts","../src/formatter-utils/levelToSymbol.ts","../src/formatter-utils/styleToHexColor.ts","../src/formatter-utils/styleToHtmlStyle.ts","../src/formatter-utils/formatStyles.ts","../src/formatter-utils/formatObject.ts","../src/formatter-utils/formatRecordToString.ts","../src/debug/debug.ts","../src/formatters/RawFormatter.ts","../src/formatters/MarkdownFormatter.ts","../src/formatters/JSONFormatter.ts","../src/formatters/ANSIFormatter.ts","../src/formatters/HTMLFormatter.ts","../src/formatters/BrowserConsoleFormatter.ts","../src/outputs/consoleOutput.ts","../src/handlers/StringHandler.ts","../src/handlers/BrowserConsoleHandler.ts","../src/handlers/ConsoleHandler.ts","../src/outputs/cliConsoleOutput.ts","../src/handlers/ConsoleCLIHandler.ts","../src/loggers/LoggerCLI.ts","../src/index.ts"],"sourcesContent":["import type { ComputedConfigForKey, Config } from \"nightingale-logger\";\nimport type { Handler, Level } from \"nightingale-types\";\n\nconst globalOrWindow: typeof global =\n  typeof global !== \"undefined\" ? global : (window as typeof global);\n\nif (\n  process.env.NODE_ENV !== \"production\" &&\n  globalOrWindow.__NIGHTINGALE_GLOBAL_HANDLERS\n) {\n  throw new Error(\"nightingale: update all to ^5.0.0\");\n}\n\nif (!globalOrWindow.__NIGHTINGALE_CONFIG) {\n  globalOrWindow.__NIGHTINGALE_CONFIG = [];\n  globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map<\n    string,\n    ComputedConfigForKey\n  >();\n  globalOrWindow.__NIGHTINGALE_CONFIG_DEFAULT = {\n    handlers: [],\n    processors: [],\n  };\n}\n\nfunction clearCache(): void {\n  globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nfunction handleConfig(config: Config): Config {\n  if (config.keys) {\n    if (config.pattern) {\n      throw new Error(\"Cannot have key and pattern for the same config\");\n    }\n    if (config.key) {\n      throw new Error(\"Cannot have key and keys for the same config\");\n    }\n  } else if (config.key) {\n    if (config.pattern) {\n      throw new Error(\"Cannot have key and pattern for the same config\");\n    }\n    config.keys = [config.key];\n    delete config.key;\n  }\n\n  if (config.handler) {\n    if (config.handlers) {\n      throw new Error(\"Cannot have handler and handlers for the same config\");\n    }\n    config.handlers = [config.handler];\n    delete config.handler;\n  }\n\n  if (config.processor) {\n    if (config.processors) {\n      throw new Error(\n        \"Cannot have processors and processors for the same config\",\n      );\n    }\n    config.processors = [config.processor];\n    delete config.processor;\n  }\n\n  return config;\n}\n\nexport function configure(config: Config[]): void {\n  if (globalOrWindow.__NIGHTINGALE_CONFIG.length > 0) {\n    // eslint-disable-next-line no-console\n    console.log(\"nightingale: warning: config overridden\");\n  }\n\n  clearCache();\n  globalOrWindow.__NIGHTINGALE_CONFIG = config.map(handleConfig);\n}\n\nexport function addConfig(config: Config, unshift = false): void {\n  config = handleConfig(config);\n  globalOrWindow.__NIGHTINGALE_CONFIG[unshift ? \"unshift\" : \"push\"](config);\n  clearCache();\n}\n\nconst configIsForKey = (key: string) => (config: Config) => {\n  if (config.keys) return config.keys.includes(key);\n  if (config.pattern) return config.pattern.test(key);\n  return true;\n};\n\nglobalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = (\n  key: string,\n): ComputedConfigForKey => {\n  const globalCache = globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n  const existingCache = globalCache.get(key);\n\n  if (existingCache) {\n    return existingCache;\n  }\n\n  const loggerConfig: ComputedConfigForKey = {\n    handlers: [],\n    processors: [],\n  };\n\n  globalOrWindow.__NIGHTINGALE_CONFIG\n    .filter(configIsForKey(key))\n    .some((config: Config) => {\n      if (config.handlers) loggerConfig.handlers.push(...config.handlers);\n      if (config.processors) loggerConfig.processors.push(...config.processors);\n      return config.stop;\n    });\n\n  globalCache.set(key, loggerConfig);\n  return loggerConfig;\n};\n\nif (globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD) {\n  globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD = (\n    key: string,\n    level: Level,\n  ): ComputedConfigForKey => {\n    const { handlers, processors }: ComputedConfigForKey =\n      globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(key);\n\n    return {\n      handlers: handlers.filter(\n        (handler: Handler) =>\n          level >= handler.minLevel &&\n          (!handler.isHandling || handler.isHandling(level, key)),\n      ),\n      processors,\n    };\n  };\n}\n","import { Level } from \"nightingale-levels\";\n\nexport type LevelToStyles = Readonly<Record<number, string[]>>;\n\nexport const levelToStyles: LevelToStyles = {\n  [Level.TRACE]: [\"gray\"],\n  [Level.DEBUG]: [\"gray\"],\n  // [Level.INFO]: ['gray'],\n  [Level.WARN]: [\"yellow\"],\n  [Level.ERROR]: [\"red\", \"bold\"],\n  [Level.CRITICAL]: [\"red\", \"bold\"],\n  [Level.FATAL]: [\"bgRed\", \"white\"],\n  [Level.EMERGENCY]: [\"bgRed\", \"white\"],\n};\n","import { Level } from \"nightingale-levels\";\n\nexport type LevelToSymbol = Readonly<Record<number, string>>;\n\nexport const levelToSymbol: LevelToSymbol = {\n  [Level.TRACE]: \"•\",\n  [Level.DEBUG]: \"•\",\n  [Level.INFO]: \"→\",\n  [Level.WARN]: \"⚠\",\n  [Level.ERROR]: \"✖\",\n  [Level.CRITICAL]: \"!\",\n  [Level.FATAL]: \"‼\",\n  [Level.EMERGENCY]: \"‼\",\n};\n","export const styleToHexColor = {\n  orange: \"ff5f00\",\n} as const;\n\nexport type StyleToHexColor = Readonly<\n  Record<keyof typeof styleToHexColor, string>\n>;\n","import { styleToHexColor } from \"./styleToHexColor\";\n\nexport interface HtmlStyle {\n  readonly open: string;\n  readonly close: string;\n}\n\nexport const styleToHtmlStyleThemeLight = {\n  // text style\n  bold: { open: \"font-weight: bold\", close: \"font-weight: normal\" },\n  italic: { open: \"font-style: italic\", close: \"font-style: normal\" },\n  underline: {\n    open: \"text-decoration: underline\",\n    close: \"text-decoration: none\",\n  },\n  inverse: {\n    open: \"unicode-bidi: bidi-override; direction: rtl\",\n    close: \"unicode-bidi: normal; direction: ltr\",\n  },\n  strikethrough: {\n    open: \"text-decoration: line-through\",\n    close: \"text-decoration: none\",\n  },\n\n  black: { open: \"color: black\", close: \"color: currentcolor\" },\n  red: { open: \"color: #ff0020\", close: \"color: currentcolor\" },\n  green: { open: \"color: #00b317\", close: \"color: currentcolor\" },\n  yellow: { open: \"color: #ffcc00\", close: \"color: currentcolor\" },\n  blue: { open: \"color: #00a0ff\", close: \"color: currentcolor\" },\n  magenta: { open: \"color: #ff00a0\", close: \"color: currentcolor\" },\n  cyan: { open: \"color: #00cfd8\", close: \"color: currentcolor\" },\n  white: { open: \"color: white\", close: \"color: currentcolor\" },\n  gray: { open: \"color: gray\", close: \"color: currentcolor\" },\n  dim: { open: \"color: #808080\", close: \"color: currentcolor\" },\n\n  bgBlack: { open: \"background: black\", close: \"background: initial\" },\n  bgRed: { open: \"background: #ff0020\", close: \"background: initial\" },\n  bgGreen: { open: \"background: #00b317\", close: \"background: initial\" },\n  bgYellow: { open: \"background: #ffcc00\", close: \"background: initial\" },\n  bgBlue: { open: \"background: #00a0ff\", close: \"background: initial\" },\n  bgMagenta: { open: \"background: #ff00a0\", close: \"background: initial\" },\n  bgCyan: { open: \"background: #00cfd8\", close: \"background: initial\" },\n  bgWhite: { open: \"background: white\", close: \"background: initial\" },\n\n  orange: {\n    open: `color: #${styleToHexColor.orange}`,\n    close: \"color: currentcolor\",\n  },\n} as const;\n\nexport type StyleToHtmlStyle = Readonly<\n  Record<keyof typeof styleToHtmlStyleThemeLight, HtmlStyle>\n>;\n\nexport const styleToHtmlStyleThemeDark: StyleToHtmlStyle = {\n  ...styleToHtmlStyleThemeLight,\n  black: styleToHtmlStyleThemeLight.white,\n  bgBlack: styleToHtmlStyleThemeLight.bgWhite,\n  white: styleToHtmlStyleThemeLight.black,\n  bgWhite: styleToHtmlStyleThemeLight.bgBlack,\n  gray: { open: \"color: lightgray\", close: \"color: currentcolor\" },\n};\n","/* eslint sort-keys: error */\n\nexport const formatStyles = {\n  bigint: [\"yellow\", \"bold\"],\n  boolean: [\"green\"],\n  date: [\"magenta\"],\n  error: [\"red\"],\n  function: [\"blue\"],\n  null: [\"bold\"],\n  number: [\"yellow\"],\n  regexp: [\"magenta\"],\n  string: [\"orange\"],\n  symbol: [\"magenta\"],\n  undefined: [\"dim\"],\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type { Styles } from \"nightingale-types\";\nimport { formatStyles } from \"./formatStyles\";\n\nexport interface FormatObjectOptions {\n  padding?: string;\n  maxDepth?: number;\n}\n\nexport type StyleFn = (styles: Styles, value: string) => string;\n\nexport type ObjectStyles<Keys extends string = string> = Record<Keys, Styles>;\n\nconst noStyleFn: StyleFn = (styles: Styles, value: string): string => value;\n\ninterface InternalFormatParams {\n  padding: string;\n  depth: number;\n  maxDepth: number;\n  objects: Set<unknown>;\n}\n\ninterface FormattedKey {\n  stringKey: string;\n  formattedKey: string;\n}\n\ntype FormatKey<Key> = (\n  key: Key,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n) => FormattedKey;\n\ninterface Value<Key> {\n  key: Key;\n  value: unknown;\n}\n\ninterface FormattedValue {\n  stringValue: string;\n  formattedValue: string;\n}\n\ntype Values<Key> = Value<Key>[];\n\ninterface InternalFormatIteratorParams<Key> {\n  prefix: string;\n  suffix: string;\n  formatKey: FormatKey<Key>;\n  prefixSuffixSpace?: string;\n}\n\nfunction tryStringify(arg: unknown): string {\n  try {\n    return JSON.stringify(arg).replace(/\\\\n/g, \"\\n\");\n  } catch {\n    return \"[Circular]\";\n  }\n}\n\nconst sameRawFormattedValue = (value: string): FormattedValue => ({\n  stringValue: value,\n  formattedValue: value,\n});\n\nconst numericSeparator = \"_\";\n\nconst formatIntegerValue = (integerAsString: string): string => {\n  let result = \"\";\n  let i = integerAsString.length;\n  const start = integerAsString.startsWith(\"-\") ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    result = `${numericSeparator}${integerAsString.slice(i - 3, i)}${result}`;\n  }\n  return i === integerAsString.length\n    ? integerAsString\n    : `${integerAsString.slice(0, i)}${result}`;\n};\n\nconst formatDecimalIntegerValue = (integerAsString: string): string => {\n  let result = \"\";\n  let i = 0;\n  for (; i < integerAsString.length - 3; i += 3) {\n    result += `${integerAsString.slice(i, i + 3)}${numericSeparator}`;\n  }\n  return i === 0 ? integerAsString : `${result}${integerAsString.slice(i)}`;\n};\n\nconst formatNumberValue = (value: number): string => {\n  if (Number.isNaN(value)) {\n    return \"NaN\";\n  }\n  if (value === Number.POSITIVE_INFINITY) {\n    return \"+Infinity\";\n  }\n  if (value === Number.NEGATIVE_INFINITY) {\n    return \"-Infinity\";\n  }\n  if (value === Number.EPSILON) {\n    return \"Epsilon\";\n  }\n  if (Object.is(value, -0)) {\n    return \"-0\";\n  }\n  const integer = Math.trunc(value);\n  const integerAsString = integer.toString();\n  if (integer === value) {\n    if (integerAsString.includes(\"e\")) {\n      return integerAsString;\n    }\n    return formatIntegerValue(integerAsString);\n  } else {\n    return `${formatIntegerValue(integerAsString)}.${formatDecimalIntegerValue(String(value).slice(integerAsString.length + 1))}`;\n  }\n};\n\nfunction internalFormatValue(\n  value: unknown,\n  styleFn: StyleFn,\n  styles: Styles,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value === null) {\n      styles = [\"bold\"];\n    } else {\n      switch (typeofValue) {\n        case \"bigint\":\n          styles = formatStyles.bigint;\n          break;\n        case \"boolean\":\n          styles = formatStyles.boolean;\n          break;\n        case \"undefined\":\n          styles = formatStyles.undefined;\n          break;\n        case \"number\":\n          styles = formatStyles.number;\n          break;\n        case \"string\":\n          styles = formatStyles.string;\n          break;\n        case \"symbol\":\n          styles = formatStyles.symbol;\n          break;\n        case \"object\":\n          if (value instanceof Date) {\n            styles = formatStyles.date;\n          }\n          if (value instanceof RegExp) {\n            styles = formatStyles.regexp;\n          }\n          if (value instanceof Error) {\n            styles = formatStyles.error;\n          }\n          break;\n        case \"function\":\n          styles = formatStyles.function;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  let stringValue: string;\n  if (value === null) {\n    stringValue = \"null\";\n  } else if (value === undefined) {\n    stringValue = \"undefined\";\n  } else if (typeofValue === \"number\") {\n    stringValue = formatNumberValue(value as number);\n  } else if (typeofValue === \"boolean\") {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    stringValue = (value as any).toString() as string;\n  } else if ((value as () => unknown).constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = \"{Object...}\";\n    } else {\n      return internalFormatObject(\n        value as Record<string, unknown>,\n        styleFn,\n        undefined,\n        {\n          padding,\n          depth: depth + 1,\n          maxDepth,\n          objects,\n        },\n      );\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = \"[Array...]\";\n    } else {\n      return internalFormatArray(value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Error) {\n    const stack = value.stack;\n    stringValue =\n      stack?.startsWith(value.message) ||\n      stack?.startsWith(`${value.name}: ${value.message}`)\n        ? stack\n        : `${value.message}\\n${stack || \"\"}`;\n  } else if (value instanceof Map) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatMap(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (typeofValue === \"bigint\") {\n    stringValue = `[BigInt: ${(value as bigint).toString()}]`;\n  } else if (typeofValue === \"symbol\") {\n    stringValue = (value as symbol).toString();\n  } else if (value instanceof Set) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatSet(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof WeakMap) {\n    stringValue = \"{WeakMap...}\";\n  } else if (value instanceof WeakSet) {\n    stringValue = \"{WeakSet...}\";\n  } else if (value instanceof Date) {\n    stringValue = `[Date: ${value.toISOString()}]`;\n  } else if (value instanceof RegExp) {\n    stringValue = `[RegExp: ${value.toString()}]`;\n  } else if (typeof value === \"function\") {\n    stringValue = `[Function: ${value.name}]`;\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = \",\";\n\nconst internalFormatKey: FormatKey<string> = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return {\n    stringKey: `${key}: `,\n    formattedKey: `${styleFn([\"dim\", \"bold\"], `${key}:`)} `,\n  };\n};\n\nconst internalNoKey: FormatKey<undefined> = (\n  key: string | undefined,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return { stringKey: \"\", formattedKey: \"\" };\n};\n\nconst internalFormatMapKey: FormatKey<unknown> = (\n  key: unknown,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  const { stringValue, formattedValue } = internalFormatValue(\n    key,\n    noStyleFn,\n    undefined,\n    internalFormatParams,\n  );\n  return {\n    stringKey: `${stringValue} => `,\n    formattedKey: `${styleFn([\"dim\", \"bold\"], `${formattedValue}:`)} `,\n  };\n};\n\nconst internalFormatIterator = <Key>(\n  values: Values<Key>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n  {\n    prefix,\n    suffix,\n    prefixSuffixSpace = \" \",\n    formatKey,\n  }: InternalFormatIteratorParams<Key>,\n): FormattedValue => {\n  let breakLine = false;\n  const formattedSeparator = (): string => styleFn([\"gray\"], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  const formattedValues: FormattedValue[] = values.map(\n    ({ key, value }, index: number) => {\n      const nextDepth = depth + 1;\n      const internalFormatParams = {\n        padding,\n        depth: nextDepth,\n        maxDepth,\n        objects,\n      };\n\n      // key must be formatted before value (browser-formatter needs order)\n      const { stringKey, formattedKey } = formatKey(\n        key,\n        styleFn,\n        internalFormatParams,\n      );\n\n      let { stringValue, formattedValue } = internalFormatValue(\n        value,\n        styleFn,\n        key && objectStyles\n          ? objectStyles[key as unknown as string]\n          : undefined,\n        internalFormatParams,\n      );\n\n      if (\n        stringValue &&\n        (stringValue.length > 80 || stringValue.includes(\"\\n\"))\n      ) {\n        breakLine = true;\n        stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n        formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n      }\n\n      return {\n        stringValue:\n          stringKey + stringValue + (index === valuesMaxIndex ? \"\" : separator),\n        formattedValue:\n          formattedKey +\n          formattedValue +\n          (index === valuesMaxIndex ? \"\" : formattedSeparator()),\n        // note: we need to format the separator for each values for browser-formatter\n      };\n    },\n  );\n\n  return {\n    stringValue:\n      prefix +\n      formattedValues\n        .map(\n          breakLine\n            ? (v) => `\\n${padding}${v.stringValue}`\n            : (fv) => fv.stringValue,\n        )\n        .join(breakLine ? \"\\n\" : \" \") +\n      suffix,\n    formattedValue: `${prefix}${\n      breakLine ? \"\" : prefixSuffixSpace\n    }${formattedValues\n      .map(\n        breakLine\n          ? (v) => `\\n${padding}${v.formattedValue}`\n          : (v) => v.formattedValue,\n      )\n      .join(breakLine ? \"\" : \" \")}${\n      breakLine ? \",\\n\" : prefixSuffixSpace\n    }${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(object)) {\n    return sameRawFormattedValue(\"{Circular Object}\");\n  }\n\n  const keys: string[] = Object.keys(object);\n  if (keys.length === 0) {\n    return sameRawFormattedValue(\"{}\");\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: object[key] })),\n    styleFn,\n    objectStyles,\n    { padding, depth, maxDepth, objects },\n    { prefix: \"{\", suffix: \"}\", formatKey: internalFormatKey },\n  );\n\n  objects.delete(object);\n\n  return result;\n}\n\nfunction internalFormatMap(\n  name: string,\n  map: Map<unknown, unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(map)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const keys = [...map.keys()];\n  if (keys.length === 0) {\n    return sameRawFormattedValue(`${name} {}`);\n  }\n\n  objects.add(map);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: map.get(key) })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} {`, suffix: \"}\", formatKey: internalFormatMapKey },\n  );\n\n  objects.delete(map);\n\n  return result;\n}\n\nfunction internalFormatArray(\n  array: unknown[],\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(array)) {\n    return sameRawFormattedValue(\"{Circular Array}\");\n  }\n\n  if (array.length === 0) {\n    return sameRawFormattedValue(\"[]\");\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    {\n      prefix: \"[\",\n      suffix: \"]\",\n      prefixSuffixSpace: \"\",\n      formatKey: internalNoKey,\n    },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nfunction internalFormatSet(\n  name: string,\n  set: Set<unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(set)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const values = [...set.values()];\n  if (values.length === 0) {\n    return sameRawFormattedValue(`${name} []`);\n  }\n\n  objects.add(set);\n\n  const result = internalFormatIterator(\n    values.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} [`, suffix: \"]\", formatKey: internalNoKey },\n  );\n\n  objects.delete(set);\n\n  return result;\n}\n\nexport function formatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn = noStyleFn,\n  objectStyles?: ObjectStyles,\n  { padding = \"  \", maxDepth = 10 }: FormatObjectOptions = {},\n): string {\n  const { formattedValue: result } = internalFormatObject(\n    object,\n    styleFn,\n    objectStyles,\n    {\n      padding,\n      maxDepth,\n      depth: 0,\n      objects: new Set(),\n    },\n  );\n\n  if (result === \"{}\") {\n    return \"\";\n  }\n\n  return result;\n}\n","import type { LogRecord, Metadata } from \"nightingale-types\";\nimport type { ObjectStyles, StyleFn } from \"./formatObject\";\nimport { formatObject } from \"./formatObject\";\nimport { levelToStyles } from \"./levelToStyles\";\nimport { levelToSymbol } from \"./levelToSymbol\";\n\nexport function formatRecordToString<T extends Metadata>(\n  record: LogRecord<T>,\n  style: StyleFn,\n): [string, ...string[]] {\n  const parts: string[] = [];\n\n  if (record.displayName) {\n    parts.push(style([\"dim\"], record.displayName));\n  } else if (record.key) {\n    parts.push(style([\"dim\"], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(\n      style([\"gray\", \"bold\"], record.datetime.toTimeString().split(\" \", 2)[0]!),\n    );\n    /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message: string = record.symbol || levelToSymbol[record.level] || \"\";\n  const styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  const formatRecordObject = (\n    key: string,\n    object: Record<string, unknown> | undefined,\n    objectStyles: ObjectStyles | undefined,\n  ): void => {\n    if (!object) {\n      return;\n    }\n\n    const stringObject = formatObject(object, style, objectStyles);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  };\n\n  formatRecordObject(\"metadata\", record.metadata, record.metadataStyles);\n  formatRecordObject(\"extra\", record.extra, undefined);\n  formatRecordObject(\"context\", record.context, undefined);\n\n  return [parts.join(\" \")];\n}\n","/* eslint-disable complexity */\nimport { Level } from \"nightingale-levels\";\n\nconst specialRegexpChars = /[$()+.?[\\\\\\]^{|}]/;\n\ntype TestFunction = (string: string) => boolean;\nexport type DebugValueType = RegExp | string[] | string;\n\nconst createTestFunctionFromRegexp =\n  (regexp: RegExp): TestFunction =>\n  (string: string) =>\n    regexp.test(string);\n\nconst createTestFunctionFromRegexpString = (value: string): TestFunction => {\n  if (!value.endsWith(\"/\")) throw new Error(\"Invalid RegExp DEBUG value\");\n  return createTestFunctionFromRegexp(new RegExp(value.slice(1, -1)));\n};\n\nconst createTestFunctionFromValue = (value: string): TestFunction => {\n  if (value.endsWith(\":*\")) {\n    value = value.slice(0, -2);\n    return (string: string) => string.startsWith(value);\n  }\n\n  return (string: string) => string === value;\n};\n\nexport type FindDebugLevel = (minLevel: Level, key: string) => Level;\n\nexport function createFindDebugLevel(\n  debugValue?: DebugValueType,\n): FindDebugLevel {\n  let isWildcard = false;\n  const debugValues: TestFunction[] = [];\n  const skips: TestFunction[] = [];\n\n  if (!Array.isArray(debugValue)) {\n    if (debugValue instanceof RegExp) {\n      debugValues.push(createTestFunctionFromRegexp(debugValue));\n      debugValue = undefined;\n    } else if (debugValue) {\n      debugValue = debugValue.trim();\n\n      if (debugValue.startsWith(\"/\")) {\n        debugValues.push(createTestFunctionFromRegexpString(debugValue));\n        debugValue = undefined;\n      } else {\n        debugValue = debugValue.split(/[\\s,]+/);\n      }\n    }\n  }\n\n  if (debugValue) {\n    (debugValue as string[]).forEach((value) => {\n      if (specialRegexpChars.test(value)) {\n        throw new Error(\n          `Invalid debug value: \"${value}\" (contains special chars)`,\n        );\n      }\n\n      if (!value) return;\n\n      if (value === \"*\") {\n        isWildcard = true;\n        return;\n      }\n\n      if (value.startsWith(\"-\")) {\n        skips.push(createTestFunctionFromValue(value.slice(1)));\n      } else if (!isWildcard) {\n        debugValues.push(createTestFunctionFromValue(value));\n      }\n    });\n  }\n\n  if (isWildcard) {\n    if (skips.length === 0) {\n      return () => Level.ALL;\n    } else {\n      return (minLevel: Level, key: string) =>\n        skips.some((skip) => skip(key)) ? minLevel : Level.ALL;\n    }\n  }\n\n  if (debugValues.length === 0) {\n    return (minLevel: Level) => minLevel;\n  }\n\n  return (minLevel: Level, key: string) => {\n    if (minLevel === Level.ALL || !key) {\n      return minLevel;\n    }\n\n    if (debugValues.some((dv) => dv(key))) {\n      return skips.some((skip) => skip(key)) ? minLevel : Level.ALL;\n    }\n\n    return minLevel;\n  };\n}\n","import type { Styles } from \"nightingale-types\";\nimport type { NightingaleFormatter } from \"../formatter-utils\";\nimport { formatRecordToString } from \"../formatter-utils\";\n\nexport function style(styles: Styles, value: string): string {\n  return value;\n}\n\nexport const RawFormatter: NightingaleFormatter = {\n  format(record) {\n    return formatRecordToString(record, style);\n  },\n};\n","import type { Styles } from \"nightingale-types\";\nimport type { NightingaleFormatter } from \"../formatter-utils\";\nimport { formatRecordToString } from \"../formatter-utils\";\n\nexport function style(styles: Styles, string: string): string {\n  if (!styles || styles.length === 0 || !string) {\n    return string;\n  }\n\n  // eslint-disable-next-line unicorn/no-array-reduce\n  return styles.reduce((part, styleName) => {\n    switch (styleName) {\n      case \"bold\":\n        return `*${part}*`;\n      case \"italic\":\n        return `_${part}_`;\n      case \"strikethrough\":\n        return `~${part}~`;\n\n      // no default\n    }\n\n    return part;\n  }, string);\n}\n\nexport const MarkdownFormatter: NightingaleFormatter = {\n  format(record) {\n    return formatRecordToString(record, style);\n  },\n};\n","import type { NightingaleFormatter } from \"../formatter-utils\";\n\nfunction map2object(map: Map<unknown, unknown>): unknown {\n  const object: Record<string, unknown> = {};\n\n  map.forEach((value, key) => {\n    if (typeof key === \"object\") {\n      // ignore key\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    object[String(key)] = value;\n  });\n\n  return object;\n}\n\nfunction stringify(value: unknown, space?: number | string): string {\n  return JSON.stringify(\n    value,\n    (key, objectValue) => {\n      if (objectValue instanceof Map) {\n        return map2object(objectValue);\n      }\n      if (objectValue instanceof Error) {\n        return {\n          message: objectValue.message,\n          stack: objectValue.stack,\n        };\n      }\n\n      return objectValue as unknown;\n    },\n    space,\n  );\n}\n\nexport const JSONFormatter: NightingaleFormatter = {\n  format(record) {\n    return [\n      stringify({\n        key: record.key,\n        level: record.level,\n        datetime: record.datetime,\n        message: record.message,\n        metadata: record.metadata,\n        extra: record.extra,\n      }),\n    ];\n  },\n};\n\nexport const JSONCLIFormatter: NightingaleFormatter = {\n  format(record) {\n    return [\n      stringify({\n        key: record.key,\n        time: record.datetime.toTimeString().split(\" \", 2)[0]!,\n        message: record.message,\n        ...record.metadata,\n        ...record.extra,\n      }),\n    ];\n  },\n};\n","import ansi from \"ansi-styles\";\nimport type { NightingaleFormatter } from \"nightingale\";\nimport type { Styles } from \"nightingale-types\";\nimport { formatRecordToString, styleToHexColor } from \"../formatter-utils\";\n\nexport type { Styles } from \"nightingale-types\";\n\ninterface CodePair {\n  open: string;\n  close: string;\n}\n\ntype AnsiStyles = Record<string, CodePair | undefined>;\n\nconst ansiStyles: AnsiStyles = {\n  black: ansi.black,\n  red: ansi.red,\n  green: ansi.green,\n  yellow: ansi.yellow,\n  blue: ansi.blue,\n  magenta: ansi.magenta,\n  cyan: ansi.cyan,\n  white: ansi.white,\n  gray: ansi.gray,\n  dim: ansi.dim,\n\n  bgBlack: ansi.bgBlack,\n  bgRed: ansi.bgRed,\n  bgGreen: ansi.bgGreen,\n  bgYellow: ansi.bgYellow,\n  bgBlue: ansi.bgBlue,\n  bgMagenta: ansi.bgMagenta,\n  bgCyan: ansi.bgCyan,\n  bgWhite: ansi.bgWhite,\n\n  bold: ansi.bold,\n  underline: ansi.underline,\n\n  // http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html\n  orange: {\n    open: ansi.color.ansi256(ansi.hexToAnsi256(styleToHexColor.orange)),\n    close: ansi.color.close,\n  },\n};\n\nexport function style(styles: Styles, string: string): string {\n  if (!styles || styles.length === 0 || !string) {\n    return string;\n  }\n\n  // eslint-disable-next-line unicorn/no-array-reduce\n  return styles.reduce((styledString: string, styleName: string) => {\n    const codePair: CodePair | undefined = ansiStyles[styleName];\n\n    if (!codePair) {\n      throw new Error(`Unknown style: ${styleName}`);\n    }\n\n    return codePair.open + styledString + codePair.close;\n  }, string);\n}\n\nexport const ANSIFormatter: NightingaleFormatter = {\n  format: (record) => formatRecordToString(record, style),\n};\n","import type { Styles } from \"nightingale-types\";\nimport type {\n  NightingaleFormatter,\n  StyleToHtmlStyle,\n} from \"../formatter-utils\";\nimport {\n  formatRecordToString,\n  styleToHtmlStyleThemeLight,\n} from \"../formatter-utils\";\n\nexport function style(styles: Styles, string: string): string {\n  if (!styles || styles.length === 0 || !string) {\n    return string;\n  }\n\n  return `<span style=\"${styles\n    .map(\n      (styleName) =>\n        styleToHtmlStyleThemeLight[styleName as keyof StyleToHtmlStyle].open,\n    )\n    .join(\"; \")}\">${string}</span>`;\n}\n\nexport const HTMLFormatter: NightingaleFormatter = {\n  format(record) {\n    return formatRecordToString(record, style);\n  },\n};\n","import type { StyleToHtmlStyle } from \"nightingale\";\nimport type { LogRecord, Metadata, Styles } from \"nightingale-types\";\nimport {\n  formatRecordToString,\n  styleToHtmlStyleThemeDark,\n  styleToHtmlStyleThemeLight,\n} from \"../formatter-utils\";\nimport type { NightingaleFormatter } from \"../formatter-utils\";\n\nexport const style =\n  (styleToHtmlStyle: StyleToHtmlStyle, args: string[]) =>\n  (styles: Styles, string: string): string => {\n    if (!styles || styles.length === 0 || !string) {\n      return string;\n    }\n\n    const htmlStyles = styles.map(\n      (styleName) => styleToHtmlStyle[styleName as keyof StyleToHtmlStyle],\n    );\n\n    args.push(\n      htmlStyles.map((s) => s.open).join(\"; \"),\n      htmlStyles.map((s) => s.close).join(\"; \"),\n    );\n    return `%c${string}%c`;\n  };\n\nexport class BrowserConsoleFormatter implements NightingaleFormatter {\n  styleToHtmlStyle: StyleToHtmlStyle;\n  constructor(theme: \"dark\" | \"light\" = \"light\") {\n    this.styleToHtmlStyle =\n      theme === \"dark\" ? styleToHtmlStyleThemeDark : styleToHtmlStyleThemeLight;\n  }\n\n  format<T extends Metadata>(record: LogRecord<T>): [string, ...string[]] {\n    const args: string[] = [];\n    const string = formatRecordToString(\n      record,\n      style(this.styleToHtmlStyle, args),\n    )[0];\n    return [string, ...args];\n  }\n}\n","/* eslint-disable no-console */\nimport { Level } from \"nightingale-levels\";\nimport type { LogRecord, Metadata } from \"nightingale-types\";\nimport { POB_TARGET } from \"pob-babel\";\n\nexport function consoleOutput<T extends Metadata>(\n  param: [string, ...string[]],\n  record: LogRecord<T>,\n): void {\n  if (POB_TARGET !== \"browser\") {\n    const outKey = record.level >= Level.ERROR ? \"stderr\" : \"stdout\";\n    process[outKey].write(`${param[0]}\\n`);\n  } else {\n    console[record.level >= Level.ERROR ? \"error\" : \"log\"](...param);\n  }\n}\n","/* eslint-disable prefer-template */\nimport type { Handler, Level, LogRecord, Metadata } from \"nightingale-types\";\nimport { RawFormatter } from \"../formatters/RawFormatter\";\n\nexport class StringHandler implements Handler {\n  readonly minLevel: Level;\n\n  private _buffer = \"\";\n\n  constructor(minLevel: Level) {\n    this.minLevel = minLevel;\n  }\n\n  get string(): string {\n    return this._buffer;\n  }\n\n  handle<T extends Metadata>(record: LogRecord<T>): void {\n    this._buffer += RawFormatter.format(record)[0] + \"\\n\";\n  }\n}\n","import type {\n  Handle,\n  Handler,\n  IsHandling,\n  Level,\n  LogRecord,\n  Metadata,\n} from \"nightingale-types\";\nimport { createFindDebugLevel } from \"../debug/debug\";\nimport { BrowserConsoleFormatter } from \"../formatters/BrowserConsoleFormatter\";\nimport { consoleOutput } from \"../outputs/consoleOutput\";\n\nexport function getDebugString(): string {\n  const querystring = document.location.search;\n  const debugFromLocalStorage =\n    // eslint-disable-next-line unicorn/prefer-global-this, @typescript-eslint/no-unnecessary-condition\n    window.localStorage?.getItem(\"debug\") || \"\";\n\n  if (!querystring) {\n    return debugFromLocalStorage;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/URLUtils/search#Get_the_value_of_a_single_search_param\n  const debugFromQueryString = decodeURI(\n    querystring.replace(\n      // eslint-disable-next-line prefer-regex-literals, regexp/no-super-linear-backtracking\n      new RegExp(\"^(?:.*[&?]DEBUG(?:=([^&]*))?)?.*$\", \"i\"),\n      \"$1\",\n    ),\n  );\n\n  return (\n    (debugFromLocalStorage ? `${debugFromLocalStorage},` : \"\") +\n    debugFromQueryString\n  );\n}\n\n// debug string can change any time (localStorage), so we need a new object each time.\nconst findDebugLevel = (minLevel: Level, key: string): Level =>\n  createFindDebugLevel(getDebugString())(minLevel, key);\n\ntype Theme = \"dark\" | \"light\";\n\nconst getDefaultTheme = (): Theme => {\n  try {\n    const configInLocalStorage = localStorage.getItem(\"NIGHTINGALE_THEME\");\n    if (configInLocalStorage && configInLocalStorage === \"dark\") {\n      return configInLocalStorage;\n    }\n  } catch {}\n  return \"light\";\n};\n\nconst createHandler = (theme: Theme = getDefaultTheme()): Handle => {\n  const browserConsoleFormatter = new BrowserConsoleFormatter(theme);\n  return <T extends Metadata>(record: LogRecord<T>) => {\n    consoleOutput(browserConsoleFormatter.format(record), record);\n  };\n};\n\nexport interface BrowserConsoleHandlerOptions {\n  theme?: Theme;\n}\n\nexport class BrowserConsoleHandler implements Handler {\n  minLevel: Level = 0;\n\n  handle: Handle;\n\n  isHandling: IsHandling;\n\n  constructor(minLevel: Level, options: BrowserConsoleHandlerOptions = {}) {\n    this.isHandling = (level: Level, key: string) =>\n      level >= findDebugLevel(minLevel, key);\n\n    this.handle = createHandler(options.theme);\n  }\n}\n","import { Level } from \"nightingale-levels\";\nimport type {\n  Handle,\n  Handler,\n  IsHandling,\n  LogRecord,\n  Metadata,\n} from \"nightingale-types\";\nimport { POB_TARGET } from \"pob-babel\";\nimport { createFindDebugLevel } from \"../debug/debug\";\nimport type { NightingaleFormatter } from \"../formatter-utils\";\nimport { ANSIFormatter } from \"../formatters/ANSIFormatter\";\nimport { JSONFormatter } from \"../formatters/JSONFormatter\";\nimport { consoleOutput } from \"../outputs/consoleOutput\";\n\nconst defaultFormatter =\n  POB_TARGET === \"node\" &&\n  !process.stdout.isTTY &&\n  process.env.NIGHTINGALE_CONSOLE_FORMATTER !== \"ansi\"\n    ? JSONFormatter.format\n    : ANSIFormatter.format;\n\nconst createHandle = (\n  formatter = defaultFormatter,\n  output = consoleOutput,\n): Handle => {\n  return <T extends Metadata>(record: LogRecord<T>): void => {\n    output(formatter(record), record);\n  };\n};\nconst findDebugLevel = createFindDebugLevel(process.env.DEBUG);\n\nexport interface ConsoleHandlerOptions {\n  formatter?: NightingaleFormatter[\"format\"];\n  output?: <T extends Metadata>(\n    param: string[] | string,\n    record: LogRecord<T>,\n  ) => void;\n  // compat with nightingale-app-console, not used yet\n  theme?: \"dark\" | \"light\";\n}\n\nexport class ConsoleHandler implements Handler {\n  minLevel: Level = Level.ALL;\n\n  isHandling: IsHandling;\n\n  handle: Handle;\n\n  constructor(minLevel: Level, options: ConsoleHandlerOptions = {}) {\n    this.minLevel = minLevel;\n    this.isHandling = (level: Level, key: string) =>\n      level >= findDebugLevel(minLevel, key);\n    this.handle = createHandle(options.formatter, options.output);\n  }\n}\n","/* eslint-disable no-console */\nimport { Level } from \"nightingale-levels\";\nimport type { LogRecord, Metadata } from \"nightingale-types\";\nimport { POB_TARGET } from \"pob-babel\";\n\nexport function cliConsoleOutput<T extends Metadata>(\n  param: [string, ...string[]],\n  record: LogRecord<T>,\n): void {\n  if (POB_TARGET !== \"browser\") {\n    console[record.level >= Level.ERROR ? \"error\" : \"log\"](param[0]);\n  } else {\n    console[record.level >= Level.ERROR ? \"error\" : \"log\"](...param);\n  }\n}\n","import { Level } from \"nightingale-levels\";\nimport type {\n  Handle,\n  Handler,\n  IsHandling,\n  LogRecord,\n  Metadata,\n} from \"nightingale-types\";\nimport { createFindDebugLevel } from \"../debug/debug\";\nimport { ANSIFormatter } from \"../formatters/ANSIFormatter\";\nimport { JSONFormatter } from \"../formatters/JSONFormatter\";\nimport { RawFormatter } from \"../formatters/RawFormatter\";\nimport { cliConsoleOutput } from \"../outputs/cliConsoleOutput\";\nimport { consoleOutput } from \"../outputs/consoleOutput\";\n\nconst createHandle = ({\n  json,\n  noColor = process.env.NO_COLOR === \"1\" || process.env.NO_COLOR === \"true\",\n}: ConsoleCLIHandlerOptions): Handle => {\n  const formatter = (() => {\n    if (json) return JSONFormatter.format;\n    if (noColor) return RawFormatter.format;\n    return ANSIFormatter.format;\n  })();\n  const output = json ? consoleOutput : cliConsoleOutput;\n  return <T extends Metadata>(record: LogRecord<T>): void => {\n    output(formatter(record), record);\n  };\n};\nconst findDebugLevel = createFindDebugLevel(process.env.DEBUG);\n\nexport interface ConsoleCLIHandlerOptions {\n  json?: boolean;\n  noColor?: boolean;\n}\n\nexport class ConsoleCLIHandler implements Handler {\n  minLevel: Level = Level.ALL;\n\n  isHandling: IsHandling;\n\n  handle: Handle;\n\n  constructor(minLevel: Level, options: ConsoleCLIHandlerOptions = {}) {\n    this.minLevel = minLevel;\n    this.isHandling = (level: Level, key: string) =>\n      level >= findDebugLevel(minLevel, key);\n    this.handle = createHandle(options);\n  }\n}\n","import type { ComputedConfigForKey } from \"nightingale-logger\";\nimport { Level, Logger } from \"nightingale-logger\";\nimport type { Handler, Processor } from \"nightingale-types\";\nimport { ConsoleCLIHandler } from \"../handlers/ConsoleCLIHandler\";\n\nexport interface LoggerCLIOptions {\n  displayName?: string;\n  handlers?: Handler[];\n  processors?: Processor[];\n  json?: boolean;\n  noColor?: boolean;\n}\n\nexport class LoggerCLI extends Logger {\n  private handlers: Handler[];\n  private processors: Processor[] = [];\n  private json: boolean;\n  constructor(\n    key: string,\n    { displayName, processors, json = false, noColor }: LoggerCLIOptions = {},\n  ) {\n    super(key, displayName);\n    this.handlers = [new ConsoleCLIHandler(Level.INFO, { json, noColor })];\n    this.processors = processors ?? [];\n    this.json = json;\n  }\n\n  protected override getHandlersAndProcessors(\n    recordLevel: number,\n  ): ComputedConfigForKey {\n    return {\n      handlers: this.handlers,\n      processors: this.processors,\n    };\n  }\n\n  logJsonOnly(\n    messageOrError: string,\n    metadata: Record<string, unknown>,\n    level: Level = Level.INFO,\n  ): void {\n    if (this.json) {\n      this.log(messageOrError, metadata, level);\n    }\n  }\n\n  debugJsonOnly(\n    messageOrError: string,\n    metadata: Record<string, unknown>,\n  ): void {\n    if (this.json) {\n      this.debug(messageOrError, metadata);\n    }\n  }\n\n  noticeJsonOnly(\n    messageOrError: string,\n    metadata: Record<string, unknown>,\n  ): void {\n    if (this.json) {\n      this.notice(messageOrError, metadata);\n    }\n  }\n\n  infoJsonOnly(\n    messageOrError: string,\n    metadata: Record<string, unknown>,\n  ): void {\n    if (this.json) {\n      this.info(messageOrError, metadata);\n    }\n  }\n\n  warnJsonOnly(\n    messageOrError: string,\n    metadata: Record<string, unknown>,\n  ): void {\n    if (this.json) {\n      this.warn(messageOrError, metadata);\n    }\n  }\n\n  group<T, Result extends Awaited<T> | Promise<T>>(\n    name: string,\n    fn: () => Result,\n  ): Result extends Promise<infer V> ? Promise<V> : Awaited<T> {\n    if (this.json) {\n      return fn() as Result extends Promise<infer V> ? Promise<V> : Awaited<T>;\n    } else {\n      console.group(name);\n      const result = fn();\n      if (result instanceof Promise) {\n        return result.finally(() => {\n          console.groupEnd();\n        }) as Result extends Promise<infer V> ? Promise<V> : never;\n      } else {\n        console.groupEnd();\n        return result as Result extends Promise<infer V>\n          ? Promise<V>\n          : Awaited<T>;\n      }\n    }\n  }\n\n  separator(): void {\n    console.log();\n  }\n}\n\nexport class LoggerCLIString extends LoggerCLI {\n  constructor(\n    key: string,\n    {\n      displayName,\n      handlers,\n      processors,\n      json = false,\n      noColor = false,\n    }: LoggerCLIOptions = {},\n  ) {\n    super(key, { displayName, handlers, processors, json, noColor });\n  }\n}\n","import { Logger } from \"nightingale-logger\";\n\nexport { Logger } from \"nightingale-logger\";\nexport { Level, Level as levels } from \"nightingale-levels\";\nexport { configure, addConfig } from \"./config\";\nexport * from \"./formatter-utils\";\nexport { createFindDebugLevel } from \"./debug/debug\";\nexport { RawFormatter } from \"./formatters/RawFormatter\";\nexport { MarkdownFormatter } from \"./formatters/MarkdownFormatter\";\nexport { JSONFormatter } from \"./formatters/JSONFormatter\";\nexport { ANSIFormatter } from \"./formatters/ANSIFormatter\";\nexport { HTMLFormatter } from \"./formatters/HTMLFormatter\";\nexport { BrowserConsoleFormatter } from \"./formatters/BrowserConsoleFormatter\";\nexport { consoleOutput } from \"./outputs/consoleOutput\";\nexport { StringHandler } from \"./handlers/StringHandler\";\nexport { BrowserConsoleHandler } from \"./handlers/BrowserConsoleHandler\";\nexport { ConsoleHandler } from \"./handlers/ConsoleHandler\";\nexport { ConsoleCLIHandler } from \"./handlers/ConsoleCLIHandler\";\nexport { LoggerCLI } from \"./loggers/LoggerCLI\";\nexport { formatStyles } from \"./formatter-utils/formatStyles\";\n\n/**\n * listen to uncaughtException and unhandledRejection\n * @param {Logger} [logger]\n */\nexport function listenUnhandledErrors(\n  logger: Logger = new Logger(\n    \"nightingale:listenUnhandledErrors\",\n    \"UnhandledErrors\",\n  ),\n): void {\n  process.on(\"uncaughtException\", (error) => {\n    logger.error(error, {\n      unhandled: true,\n      type: \"uncaughtException\",\n    });\n  });\n  process.on(\"unhandledRejection\", (error) => {\n    logger.error(error as Error, {\n      unhandled: true,\n      type: \"unhandledRejection\",\n    });\n  });\n}\n"],"names":["globalOrWindow","global","window","process","env","NODE_ENV","__NIGHTINGALE_GLOBAL_HANDLERS","Error","__NIGHTINGALE_CONFIG","__NIGHTINGALE_LOGGER_MAP_CACHE","Map","__NIGHTINGALE_CONFIG_DEFAULT","handlers","processors","clearCache","clear","handleConfig","config","keys","pattern","key","handler","processor","configure","length","console","log","map","addConfig","unshift","configIsForKey","includes","test","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","globalCache","existingCache","get","loggerConfig","filter","some","push","stop","set","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD","level","minLevel","isHandling","levelToStyles","Level","TRACE","DEBUG","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","levelToSymbol","INFO","styleToHexColor","orange","styleToHtmlStyleThemeLight","bold","open","close","italic","underline","inverse","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","dim","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","styleToHtmlStyleThemeDark","formatStyles","bigint","boolean","date","error","function","null","number","regexp","string","symbol","undefined","noStyleFn","styles","value","tryStringify","arg","JSON","stringify","replace","sameRawFormattedValue","stringValue","formattedValue","numericSeparator","formatIntegerValue","integerAsString","result","i","start","startsWith","slice","formatDecimalIntegerValue","formatNumberValue","Number","isNaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","EPSILON","Object","is","integer","Math","trunc","toString","String","internalFormatValue","styleFn","padding","depth","maxDepth","objects","typeofValue","Date","RegExp","constructor","internalFormatObject","Array","isArray","internalFormatArray","stack","message","name","internalFormatMap","Set","internalFormatSet","WeakMap","WeakSet","toISOString","separator","internalFormatKey","stringKey","formattedKey","internalNoKey","internalFormatMapKey","internalFormatParams","internalFormatIterator","values","objectStyles","prefix","suffix","prefixSuffixSpace","formatKey","breakLine","formattedSeparator","valuesMaxIndex","formattedValues","index","v","fv","join","object","has","add","delete","array","formatObject","formatRecordToString","record","style","parts","displayName","datetime","toTimeString","split","formatRecordObject","stringObject","metadata","metadataStyles","extra","context","specialRegexpChars","createTestFunctionFromRegexp","createTestFunctionFromRegexpString","endsWith","createTestFunctionFromValue","createFindDebugLevel","debugValue","isWildcard","debugValues","skips","trim","forEach","ALL","skip","dv","RawFormatter","format","reduce","part","styleName","MarkdownFormatter","map2object","space","objectValue","JSONFormatter","ansiStyles","ansi","color","ansi256","hexToAnsi256","styledString","codePair","ANSIFormatter","HTMLFormatter","styleToHtmlStyle","args","htmlStyles","s","BrowserConsoleFormatter","theme","consoleOutput","param","StringHandler","_buffer","handle","getDebugString","querystring","document","location","search","debugFromLocalStorage","localStorage","getItem","debugFromQueryString","decodeURI","findDebugLevel","getDefaultTheme","configInLocalStorage","createHandler","browserConsoleFormatter","BrowserConsoleHandler","options","defaultFormatter","createHandle","formatter","output","ConsoleHandler","cliConsoleOutput","json","noColor","NO_COLOR","ConsoleCLIHandler","LoggerCLI","Logger","getHandlersAndProcessors","logJsonOnly","messageOrError","debugJsonOnly","debug","noticeJsonOnly","notice","infoJsonOnly","info","warnJsonOnly","warn","group","fn","Promise","finally","groupEnd","listenUnhandledErrors","logger","on","unhandled","type"],"mappings":"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"}