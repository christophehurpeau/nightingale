{"version":3,"file":"index-browsermodern.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\nimport Level from 'nightingale-levels';\n\nconst specialRegexpChars = /[\\\\^$+?.()|[\\]{}]/;\n\ntype TestFunction = (string: string) => boolean;\nexport type DebugValueType = string | RegExp | Array<string>;\n\nconst createTestFunctionFromRegexp = (regexp: RegExp): TestFunction => (string: string) =>\n  regexp.test(string);\n\nconst createTestFunctionFromRegexpString = (value: string): TestFunction => {\n  if (!value.endsWith('/')) throw new Error('Invalid RegExp DEBUG value');\n  return createTestFunctionFromRegexp(new RegExp(value.slice(1, -1)));\n};\n\nconst createTestFunctionFromValue = (value: string): TestFunction => {\n  if (value.endsWith(':*')) {\n    value = value.slice(0, -2);\n    return (string: string) => string.startsWith(value);\n  }\n\n  return (string: string) => string === value;\n};\n\nexport type FindDebugLevel = (minLevel: Level, key: string) => Level;\n\nexport default function createFindDebugLevel(debugValue?: DebugValueType): FindDebugLevel {\n  let wilcard = false;\n  const debugValues: Array<TestFunction> = [];\n  const skips: Array<TestFunction> = [];\n\n  if (!Array.isArray(debugValue)) {\n    if (debugValue instanceof RegExp) {\n      debugValues.push(createTestFunctionFromRegexp(debugValue));\n      debugValue = undefined;\n    } else if (debugValue) {\n      debugValue = debugValue.trim();\n\n      if (debugValue.startsWith('/')) {\n        debugValues.push(createTestFunctionFromRegexpString(debugValue));\n        debugValue = undefined;\n      } else {\n        debugValue = debugValue.split(/[\\s,]+/);\n      }\n    }\n  }\n\n  if (debugValue) {\n    (debugValue as Array<string>).forEach(value => {\n      if (specialRegexpChars.test(value)) {\n        throw new Error(`Invalid debug value: \"${value}\" (contains special chars)`);\n      }\n\n      if (!value) return;\n\n      if (value === '*') {\n        wilcard = true;\n        return;\n      }\n\n      if (value.startsWith('-')) {\n        skips.push(createTestFunctionFromValue(value.substr(1)));\n      } else if (!wilcard) {\n        debugValues.push(createTestFunctionFromValue(value));\n      }\n    });\n  }\n\n  if (wilcard) {\n    if (skips.length === 0) {\n      return () => Level.ALL;\n    } else {\n      return (minLevel: Level, key: string) =>\n        skips.some(skip => skip(key)) ? minLevel : Level.ALL;\n    }\n  }\n\n  if (debugValues.length === 0) {\n    return (minLevel: number) => minLevel;\n  }\n\n  return (minLevel: Level, key: string) => {\n    if (minLevel === Level.ALL || !key) {\n      return minLevel;\n    }\n\n    if (debugValues.some(debugValue => debugValue(key))) {\n      return skips.some(skip => skip(key)) ? minLevel : Level.ALL;\n    }\n\n    return minLevel;\n  };\n}\n"],"names":["specialRegexpChars","createTestFunctionFromRegexp","regexp","string","test","createTestFunctionFromRegexpString","value","endsWith","Error","RegExp","slice","createTestFunctionFromValue","startsWith","createFindDebugLevel","debugValue","wilcard","debugValues","skips","Array","isArray","push","undefined","trim","split","forEach","substr","length","Level","ALL","minLevel","key","some","skip"],"mappings":";;AAAA;AACA,AAEA,MAAMA,qBAAqB,mBAA3B;;AAKA,MAAMC,+BAA+B,SAA/BA,4BAA+B,CAACC,MAAD;SAAkC,UAACC,MAAD;WACrED,OAAOE,IAAP,CAAYD,MAAZ,CADqE;GAAlC;CAArC;;AAGA,MAAME,qCAAqC,SAArCA,kCAAqC,CAACC,KAAD,EAAiC;MACtE,CAACA,MAAMC,QAAN,CAAe,GAAf,CAAL,EAA0B,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;SACnBP,6BAA6B,IAAIQ,MAAJ,CAAWH,MAAMI,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAX,CAA7B,CAAP;CAFF;;AAKA,MAAMC,8BAA8B,SAA9BA,2BAA8B,CAACL,KAAD,EAAiC;MAC/DA,MAAMC,QAAN,CAAe,IAAf,CAAJ,EAA0B;YAChBD,MAAMI,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAR;WACO,UAACP,MAAD;aAAoBA,OAAOS,UAAP,CAAkBN,KAAlB,CAApB;KAAP;;;SAGK,UAACH,MAAD;WAAoBA,WAAWG,KAA/B;GAAP;CANF;;AAWA,AAAe,SAASO,oBAAT,CAA8BC,UAA9B,EAA2E;MACpFC,UAAU,KAAd;QACMC,cAAmC,EAAzC;QACMC,QAA6B,EAAnC;;MAEI,CAACC,MAAMC,OAAN,CAAcL,UAAd,CAAL,EAAgC;QAC1BA,sBAAsBL,MAA1B,EAAkC;kBACpBW,IAAZ,CAAiBnB,6BAA6Ba,UAA7B,CAAjB;mBACaO,SAAb;KAFF,MAGO,IAAIP,UAAJ,EAAgB;mBACRA,WAAWQ,IAAX,EAAb;;UAEIR,WAAWF,UAAX,CAAsB,GAAtB,CAAJ,EAAgC;oBAClBQ,IAAZ,CAAiBf,mCAAmCS,UAAnC,CAAjB;qBACaO,SAAb;OAFF,MAGO;qBACQP,WAAWS,KAAX,CAAiB,QAAjB,CAAb;;;;;MAKFT,UAAJ,EAAgB;cACd,CAA8BU,OAA9B,CAAsC,iBAAS;UACzCxB,mBAAmBI,IAAnB,CAAwBE,KAAxB,CAAJ,EAAoC;cAC5B,IAAIE,KAAJ,CAAW,yBAAwBF,KAAM,4BAAzC,CAAN;;;UAGE,CAACA,KAAL,EAAY;;UAERA,UAAU,GAAd,EAAmB;kBACP,IAAV;;;;UAIEA,MAAMM,UAAN,CAAiB,GAAjB,CAAJ,EAA2B;cACnBQ,IAAN,CAAWT,4BAA4BL,MAAMmB,MAAN,CAAa,CAAb,CAA5B,CAAX;OADF,MAEO,IAAI,CAACV,OAAL,EAAc;oBACPK,IAAZ,CAAiBT,4BAA4BL,KAA5B,CAAjB;;KAfJ;;;MAoBES,OAAJ,EAAa;QACPE,MAAMS,MAAN,KAAiB,CAArB,EAAwB;aACf;eAAMC,MAAMC,GAAZ;OAAP;KADF,MAEO;aACE,UAACC,QAAD,EAAkBC,GAAlB;eACLb,MAAMc,IAAN,CAAW;iBAAQC,KAAKF,GAAL,CAAR;SAAX,IAAgCD,QAAhC,GAA2CF,MAAMC,GAD5C;OAAP;;;;MAKAZ,YAAYU,MAAZ,KAAuB,CAA3B,EAA8B;WACrB,UAACG,QAAD;aAAsBA,QAAtB;KAAP;;;SAGK,UAACA,QAAD,EAAkBC,GAAlB,EAAkC;QACnCD,aAAaF,MAAMC,GAAnB,IAA0B,CAACE,GAA/B,EAAoC;aAC3BD,QAAP;;;QAGEb,YAAYe,IAAZ,CAAiB;aAAcjB,WAAWgB,GAAX,CAAd;KAAjB,CAAJ,EAAqD;aAC5Cb,MAAMc,IAAN,CAAW;eAAQC,KAAKF,GAAL,CAAR;OAAX,IAAgCD,QAAhC,GAA2CF,MAAMC,GAAxD;;;WAGKC,QAAP;GATF;;;;;"}