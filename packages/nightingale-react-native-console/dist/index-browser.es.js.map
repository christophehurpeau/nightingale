{"version":3,"file":"index-browser.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport formatterANSI from 'nightingale-ansi-formatter';\nimport type {\n  Level,\n  Handle,\n  IsHandling,\n  LogRecord,\n  Metadata,\n  Handler,\n} from 'nightingale-types';\nimport { Platform } from 'react-native';\nimport parseErrorStack from 'react-native/Libraries/Core/Devtools/parseErrorStack';\nimport symbolicateStackTrace from 'react-native/Libraries/Core/Devtools/symbolicateStackTrace';\n\nconst getStackTrace = (e: Error): any => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (Platform.hasOwnProperty('constants')) {\n    // RN version >= 0.63\n    if (Platform.constants.reactNativeVersion.minor >= 64) {\n      // RN version >= 0.64 -> Stacktrace as string\n      return parseErrorStack(e.stack as unknown as any);\n    }\n    // RN version == 0.63 -> Stacktrace as string\n    else return parseErrorStack(e);\n  }\n  // RN version < 0.63 -> Stacktrace as string\n  else return parseErrorStack(e);\n};\n\nfunction parsedStackToString(stack: any[]): string {\n  return stack\n    .map(\n      (frame) =>\n        `  at ${frame.file}${\n          frame.lineNumber\n            ? `:${frame.lineNumber}${frame.column ? `:${frame.column}` : ''}`\n            : ''\n        }${frame.methodName ? ` in ${frame.methodName}` : ''}`,\n    )\n    .join('\\n');\n}\n\nfunction consoleOutput<T extends Metadata>(\n  param: string | string[],\n  record: LogRecord<T>,\n): void {\n  // eslint-disable-next-line no-console\n  console.log(...param);\n}\n\nconst createHandle = (): Handle => {\n  return <T extends Metadata>(record: LogRecord<T>): void => {\n    const error = record.metadata?.error;\n    if (error && error instanceof Error) {\n      delete record.metadata?.error;\n      symbolicateStackTrace(getStackTrace(error))\n        .then(({ stack, codeFrame }: any) => {\n          error.stack = parsedStackToString(stack);\n          consoleOutput([formatterANSI(record)], record);\n        })\n        .catch((err) => {\n          consoleOutput([formatterANSI(record)], record);\n        });\n    } else {\n      consoleOutput([formatterANSI(record)], record);\n    }\n  };\n};\n\nexport class ReactNativeConsoleHandler implements Handler {\n  minLevel: Level = 0;\n\n  handle: Handle;\n\n  isHandling: IsHandling;\n\n  constructor(minLevel: Level) {\n    this.minLevel = minLevel;\n    this.isHandling = (level: Level) => level >= minLevel;\n    this.handle = createHandle();\n  }\n}\n"],"names":["getStackTrace","e","Platform","hasOwnProperty","constants","reactNativeVersion","minor","parseErrorStack","stack","parsedStackToString","map","frame","file","lineNumber","column","methodName","join","consoleOutput","param","console","log","createHandle","record","error","metadata","Error","symbolicateStackTrace","then","codeFrame","formatterANSI","catch","ReactNativeConsoleHandler","minLevel","isHandling","level","handle"],"mappings":";;;;;AAAA;;AAgBA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAmB;AACvC;AACA,MAAIC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAJ,EAA0C;AACxC;AACA,QAAID,QAAQ,CAACE,SAAT,CAAmBC,kBAAnB,CAAsCC,KAAtC,IAA+C,EAAnD,EAAuD;AACrD;AACA,aAAOC,eAAe,CAACN,CAAC,CAACO,KAAH,CAAtB;AACD,KAHD;AAAA,SAKK,OAAOD,eAAe,CAACN,CAAD,CAAtB;AACN,GARD;AAAA,OAUK,OAAOM,eAAe,CAACN,CAAD,CAAtB;AACN,CAbD;;AAeA,SAASQ,mBAAT,CAA6BD,KAA7B,EAAmD;AACjD,SAAOA,KAAK,CACTE,GADI,CAEH,UAACC,KAAD;AAAA,qBACUA,KAAK,CAACC,IADhB,IAEID,KAAK,CAACE,UAAN,SACQF,KAAK,CAACE,UADd,IAC2BF,KAAK,CAACG,MAAN,SAAmBH,KAAK,CAACG,MAAzB,GAAoC,EAD/D,IAEI,EAJR,KAKKH,KAAK,CAACI,UAAN,YAA0BJ,KAAK,CAACI,UAAhC,GAA+C,EALpD;AAAA,GAFG,EASJC,IATI,CASC,IATD,CAAP;AAUD;;AAED,SAASC,aAAT,CACEC,KADF,EAGQ;AAAA;;AACN;AACA,cAAAC,OAAO,EAACC,GAAR,iBAAeF,KAAf;AACD;;AAED,IAAMG,YAAY,GAAG,SAAfA,YAAe,GAAc;AACjC,SAAO,UAAqBC,MAArB,EAAoD;AAAA;;AACzD,QAAMC,KAAK,uBAAGD,MAAM,CAACE,QAAV,qBAAG,iBAAiBD,KAA/B;;AACA,QAAIA,KAAK,IAAIA,KAAK,YAAYE,KAA9B,EAAqC;AACnC,2BAAOH,MAAM,CAACE,QAAd,0BAAO,kBAAiBD,KAAxB;AACAG,MAAAA,qBAAqB,CAAC1B,aAAa,CAACuB,KAAD,CAAd,CAArB,CACGI,IADH,CACQ,gBAA+B;AAAA,YAA5BnB,KAA4B,QAA5BA,KAA4B;AAAA,iBAArBoB;AACdL,QAAAA,KAAK,CAACf,KAAN,GAAcC,mBAAmB,CAACD,KAAD,CAAjC;AACAS,QAAAA,aAAa,CAAC,CAACY,aAAa,CAACP,MAAD,CAAd,CAAD,CAAb;AACD,OAJH,EAKGQ,KALH,CAKS,YAAS;AACdb,QAAAA,aAAa,CAAC,CAACY,aAAa,CAACP,MAAD,CAAd,CAAD,CAAb;AACD,OAPH;AAQD,KAVD,MAUO;AACLL,MAAAA,aAAa,CAAC,CAACY,aAAa,CAACP,MAAD,CAAd,CAAD,CAAb;AACD;AACF,GAfD;AAgBD,CAjBD;;IAmBaS,yBAAb,GAOE,mCAAYC,QAAZ,EAA6B;AAAA,OAN7BA,QAM6B,GANX,CAMW;AAC3B,OAAKA,QAAL,GAAgBA,QAAhB;;AACA,OAAKC,UAAL,GAAkB,UAACC,KAAD;AAAA,WAAkBA,KAAK,IAAIF,QAA3B;AAAA,GAAlB;;AACA,OAAKG,MAAL,GAAcd,YAAY,EAA1B;AACD;;;;"}