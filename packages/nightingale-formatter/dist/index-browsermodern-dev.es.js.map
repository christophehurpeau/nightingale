{"version":3,"file":"index-browsermodern-dev.es.js","sources":["../src/levelToStyles.ts","../src/levelToSymbol.ts","../src/styleToHexColor.ts","../src/styleToHtmlStyle.ts","../src/formatObject.ts","../src/formatRecordToString.ts"],"sourcesContent":["import Level from 'nightingale-levels';\n\nexport interface LevelToStyles {\n  readonly [level: number]: Array<string>;\n}\n\nconst levelToStyles: LevelToStyles = {\n  [Level.TRACE]: ['gray'],\n  [Level.DEBUG]: ['gray'],\n  // [Levels.INFO]: ['gray'],\n  [Level.WARN]: ['yellow'],\n  [Level.ERROR]: ['red', 'bold'],\n  [Level.CRITICAL]: ['red', 'bold'],\n  [Level.FATAL]: ['bgRed', 'white'],\n  [Level.EMERGENCY]: ['bgRed', 'white'],\n};\n\nexport default levelToStyles;\n","import Level from 'nightingale-levels';\n\nexport interface LevelToSymbol {\n  readonly [level: number]: string;\n}\n\nconst levelToSymbol: LevelToSymbol = {\n  [Level.TRACE]: '•',\n  [Level.DEBUG]: '•',\n  [Level.INFO]: '→',\n  [Level.WARN]: '⚠',\n  [Level.ERROR]: '✖',\n  [Level.CRITICAL]: '!',\n  [Level.FATAL]: '‼',\n  [Level.EMERGENCY]: '‼',\n};\n\nexport default levelToSymbol;\n","export interface StyleToHexColor {\n  readonly [key: string]: string;\n}\n\nconst styleToHexColor: StyleToHexColor = {\n  orange: 'ff5f00',\n  grayLight: '808080',\n  'gray-light': '808080',\n};\n\nexport default styleToHexColor;\n","/* eslint-disable no-restricted-globals */\n\nimport hexColors from './styleToHexColor';\n\nexport interface HtmlStyle {\n  readonly open: string;\n  readonly close: string;\n}\n\nexport interface StyleToHtmlStyle {\n  readonly [key: string]: HtmlStyle;\n}\n\nconst styleToHtmlStyle: StyleToHtmlStyle = {\n  // text style\n  bold: { open: 'font-weight: bold', close: 'font-weight: normal' },\n  italic: { open: 'font-style: italic', close: 'font-style: normal' },\n  underline: { open: 'text-decoration: underline', close: 'text-decoration: none' },\n  inverse: {\n    open: 'unicode-bidi: bidi-override; direction: rtl',\n    close: 'unicode-bidi: normal; direction: ltr',\n  },\n  strikethrough: { open: 'text-decoration: line-through', close: 'text-decoration: none' },\n\n  black: { open: 'color: black', close: 'color: initial' },\n  red: { open: 'color: #ff0020', close: 'color: initial' },\n  green: { open: 'color: #00b317', close: 'color: initial' },\n  yellow: { open: 'color: #ffcc00', close: 'color: initial' },\n  blue: { open: 'color: #00a0ff', close: 'color: initial' },\n  magenta: { open: 'color: #ff00a0', close: 'color: initial' },\n  cyan: { open: 'color: #00cfd8', close: 'color: initial' },\n  white: { open: 'color: white', close: 'color: initial' },\n  gray: { open: 'color: gray', close: 'color: initial' },\n\n  bgBlack: { open: 'background: black', close: 'background: initial' },\n  bgRed: { open: 'background: #ff0020', close: 'background: initial' },\n  bgGreen: { open: 'background: #00b317', close: 'background: initial' },\n  bgYellow: { open: 'background: #ffcc00', close: 'background: initial' },\n  bgBlue: { open: 'background: #00a0ff', close: 'background: initial' },\n  bgMagenta: { open: 'background: #ff00a0', close: 'background: initial' },\n  bgCyan: { open: 'background: #00cfd8', close: 'background: initial' },\n  bgWhite: { open: 'background: white', close: 'background: initial' },\n\n  orange: { open: `color: #${hexColors.orange}`, close: 'color: initial' },\n  grayLight: { open: `color: #${hexColors.grayLight}`, close: 'color: initial' },\n  'gray-light': { open: `color: #${hexColors.grayLight}`, close: 'color: initial' },\n};\n\nexport default styleToHtmlStyle;\n","/* eslint-disable max-lines, no-useless-concat, prefer-template, no-use-before-define, typescript/no-use-before-define */\nimport { Styles } from 'nightingale-types';\n\nexport { Styles };\n\nexport interface FormatObjectOptions {\n  padding?: string;\n  maxDepth?: number;\n}\n\nexport type StyleFn = (styles: Styles, value: string) => string;\nexport type ObjectStyles = { [key: string]: Styles };\n\nconst noStyleFn: StyleFn = (styles: Styles, value: string): string => value;\n\ninterface InternalFormatParams {\n  padding: string;\n  depth: number;\n  maxDepth: number;\n  objects: Set<any>;\n}\n\ninterface FormattedKey {\n  stringKey: string;\n  formattedKey: string;\n}\n\ntype FormatKey = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n) => FormattedKey;\n\ninterface Value {\n  key: any;\n  value: any;\n}\n\ninterface FormattedValue {\n  stringValue: string;\n  formattedValue: string;\n}\n\ntype Values = Array<Value>;\n\ninterface InternalFormatIteratorParams {\n  prefix: string;\n  suffix: string;\n  prefixSuffixSpace?: string;\n  formatKey?: FormatKey;\n}\n\nfunction tryStringify(arg: any) {\n  try {\n    return JSON.stringify(arg).replace(/\\\\n/g, '\\n');\n  } catch (_) {\n    return '[Circular]';\n  }\n}\n\nconst sameRawFormattedValue = (value: string) => ({ stringValue: value, formattedValue: value });\n\nfunction internalFormatValue(\n  value: any,\n  styleFn: StyleFn,\n  styles: Styles,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value == null) {\n      styles = ['cyan'];\n    } else {\n      switch (typeofValue) {\n        case 'boolean':\n          styles = ['green'];\n          break;\n        case 'number':\n          styles = ['yellow'];\n          break;\n        case 'string':\n          styles = ['orange'];\n          break;\n        case 'symbol':\n          styles = ['magenta'];\n          break;\n      }\n    }\n  }\n\n  let stringValue;\n  if (value === null) {\n    stringValue = 'null';\n  } else if (value === undefined) {\n    stringValue = 'undefined';\n  } else if (typeofValue === 'boolean') {\n    stringValue = value.toString();\n  } else if (value.constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = '{Object...}';\n    } else {\n      return internalFormatObject(value, styleFn, undefined, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = '[Array...]';\n    } else {\n      return internalFormatArray(value, styleFn, { padding, depth: depth + 1, maxDepth, objects });\n    }\n  } else if (value instanceof Error) {\n    const stack = value.stack;\n    stringValue = stack && stack.startsWith(value.message) ? stack : `${value.message}\\n${stack}`;\n  } else if (value instanceof Map) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatMap(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Set) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatSet(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof WeakMap) {\n    stringValue = '{WeakMap...}';\n  } else if (value instanceof WeakSet) {\n    stringValue = '{WeakSet...}';\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = ',';\n\nconst internalFormatKey: FormatKey = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  if (!key) return { stringKey: '', formattedKey: '' };\n  return {\n    stringKey: `${key}: `,\n    formattedKey: styleFn(['gray-light', 'bold'], `${key}:`) + ' ',\n  };\n};\n\nconst internalFormatMapKey: FormatKey = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  const { stringValue, formattedValue } = internalFormatValue(\n    key,\n    noStyleFn,\n    undefined,\n    internalFormatParams,\n  );\n  return {\n    stringKey: stringValue + ' => ',\n    formattedKey: styleFn(['gray-light', 'bold'], `${formattedValue}:`) + ' ',\n  };\n};\n\nconst internalFormatIterator = (\n  values: Values,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n  {\n    prefix,\n    suffix,\n    prefixSuffixSpace = ' ',\n    formatKey = internalFormatKey,\n  }: InternalFormatIteratorParams,\n) => {\n  let breakLine = false;\n  const formattedSeparator = () => styleFn(['gray'], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  const formattedValues: Array<FormattedValue> = values.map(\n    ({ key, value }: { key: any; value: any }, index: number) => {\n      const nextDepth = depth + 1;\n      const internalFormatParams = { padding, depth: nextDepth, maxDepth, objects };\n\n      // key must be formatted before value (browser-formatter needs order)\n      const { stringKey, formattedKey } = formatKey(key, styleFn, internalFormatParams);\n\n      let { stringValue, formattedValue } = internalFormatValue(\n        value,\n        styleFn,\n        key && objectStyles && objectStyles[key],\n        internalFormatParams,\n      );\n\n      if (stringValue && (stringValue.length > 80 || stringValue.indexOf('\\n') !== -1)) {\n        breakLine = true;\n        stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n        formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n      }\n\n      return {\n        stringValue: stringKey + stringValue + (index === valuesMaxIndex ? '' : separator),\n        // eslint-disable-next-line no-useless-concat\n        formattedValue:\n          formattedKey + formattedValue + (index === valuesMaxIndex ? '' : formattedSeparator()),\n        // note: we need to format the separator for each values for browser-formatter\n      };\n    },\n  );\n\n  return {\n    stringValue:\n      prefix +\n      formattedValues\n        .map(breakLine ? v => `\\n${padding}${v.stringValue}` : fv => fv.stringValue)\n        .join(breakLine ? '\\n' : ' ') +\n      suffix,\n    // eslint-disable-next-line prefer-template\n    formattedValue:\n      `${prefix}${breakLine ? '' : prefixSuffixSpace}` +\n      formattedValues\n        .map(breakLine ? v => `\\n${padding}${v.formattedValue}` : v => v.formattedValue)\n        .join(breakLine ? '' : ' ') +\n      `${breakLine ? ',\\n' : prefixSuffixSpace}${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object: { [key: string]: any },\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  if (objects.has(object)) {\n    return sameRawFormattedValue('{Circular Object}');\n  }\n\n  const keys: Array<string> = Object.keys(object);\n  if (keys.length === 0) {\n    return sameRawFormattedValue('{}');\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n    keys.map(key => ({ key, value: object[key] })),\n    styleFn,\n    objectStyles,\n    { padding, depth, maxDepth, objects },\n    { prefix: '{', suffix: '}' },\n  );\n\n  objects.delete(object);\n\n  return result;\n}\n\nfunction internalFormatMap(\n  name: string,\n  map: Map<any, any>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  if (objects.has(map)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const keys = Array.from(map.keys());\n  if (keys.length === 0) {\n    return sameRawFormattedValue(`${name} {}`);\n  }\n\n  objects.add(map);\n\n  const result = internalFormatIterator(\n    keys.map(key => ({ key, value: map.get(key) })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} {`, suffix: '}', formatKey: internalFormatMapKey },\n  );\n\n  objects.delete(map);\n\n  return result;\n}\n\nfunction internalFormatArray(\n  array: Array<any>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  if (objects.has(array)) {\n    return sameRawFormattedValue('{Circular Array}');\n  }\n\n  if (array.length === 0) {\n    return sameRawFormattedValue('[]');\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map((value: any) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: '[', suffix: ']', prefixSuffixSpace: '' },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nfunction internalFormatSet(\n  name: string,\n  set: Set<any>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  if (objects.has(set)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const values = Array.from(set.values());\n  if (values.length === 0) {\n    return sameRawFormattedValue(`${name} []`);\n  }\n\n  objects.add(set);\n\n  const result = internalFormatIterator(\n    values.map(value => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} [`, suffix: ']' },\n  );\n\n  objects.delete(set);\n\n  return result;\n}\n\nexport default function formatObject(\n  object: { [key: string]: any },\n  styleFn: StyleFn = noStyleFn,\n  objectStyles?: ObjectStyles,\n  { padding = '  ', maxDepth = 10 }: FormatObjectOptions = {},\n) {\n  const { formattedValue: result } = internalFormatObject(object, styleFn, objectStyles, {\n    padding,\n    maxDepth,\n    depth: 0,\n    objects: new Set(),\n  });\n\n  if (result === '{}') {\n    return '';\n  }\n\n  return result;\n}\n","import { Record } from 'nightingale-types';\nimport levelToSymbol from './levelToSymbol';\nimport levelToStyles from './levelToStyles';\nimport formatObject, { StyleFn, ObjectStyles } from './formatObject';\n\nexport default function formatRecordToString<T>(record: Record<T>, style: StyleFn) {\n  const parts: Array<string> = [];\n\n  if (record.displayName) {\n    parts.push(style(['gray-light'], record.displayName));\n  } else if (record.key) {\n    parts.push(style(['gray-light'], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]));\n    /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message: string = record.symbol || levelToSymbol[record.level];\n  const styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  const formatRecordObject = (\n    key: string,\n    object: Object | undefined,\n    styles: ObjectStyles | undefined,\n  ) => {\n    if (!object) {\n      return;\n    }\n\n    const stringObject = formatObject(object, style, styles);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  };\n\n  formatRecordObject('metadata', record.metadata, record.metadataStyles);\n  formatRecordObject('extra', record.extra, undefined);\n  formatRecordObject('context', record.context, undefined);\n\n  return parts.join(' ');\n}\n"],"names":["levelToStyles","Level","TRACE","DEBUG","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","levelToSymbol","INFO","styleToHexColor","styleToHtmlStyle","hexColors","orange","grayLight","noStyleFn","styles","value","tryStringify","arg","JSON","stringify","replace","_","sameRawFormattedValue","internalFormatValue","styleFn","typeofValue","stringValue","undefined","toString","constructor","Object","depth","maxDepth","internalFormatObject","Array","isArray","internalFormatArray","Error","stack","startsWith","message","Map","name","internalFormatMap","Set","internalFormatSet","WeakMap","WeakSet","formattedValue","internalFormatKey","key","internalFormatMapKey","internalFormatParams","internalFormatIterator","values","objectStyles","breakLine","formattedSeparator","valuesMaxIndex","length","formattedValues","map","index","formatKey","indexOf","padding","stringKey","formattedKey","prefix","v","fv","join","suffix","prefixSuffixSpace","object","objects","has","keys","add","result","delete","from","get","array","set","formatObject","formatRecordToString","record","style","parts","displayName","push","datetime","toTimeString","split","symbol","level","formatRecordObject","stringObject","metadata","metadataStyles","extra","context"],"mappings":";;;AAMA,MAAMA,gBAA+B;GAClCC,MAAMC,KAAP,GAAe,CAAC,MAAD,CADoB;GAElCD,MAAME,KAAP,GAAe,CAAC,MAAD,CAFoB;;GAIlCF,MAAMG,IAAP,GAAc,CAAC,QAAD,CAJqB;GAKlCH,MAAMI,KAAP,GAAe,CAAC,KAAD,EAAQ,MAAR,CALoB;GAMlCJ,MAAMK,QAAP,GAAkB,CAAC,KAAD,EAAQ,MAAR,CANiB;GAOlCL,MAAMM,KAAP,GAAe,CAAC,OAAD,EAAU,OAAV,CAPoB;GAQlCN,MAAMO,SAAP,GAAmB,CAAC,OAAD,EAAU,OAAV;CARrB;;ACAA,MAAMC,gBAA+B;GAClCR,MAAMC,KAAP,GAAe,GADoB;GAElCD,MAAME,KAAP,GAAe,GAFoB;GAGlCF,MAAMS,IAAP,GAAc,GAHqB;GAIlCT,MAAMG,IAAP,GAAc,GAJqB;GAKlCH,MAAMI,KAAP,GAAe,GALoB;GAMlCJ,MAAMK,QAAP,GAAkB,GANiB;GAOlCL,MAAMM,KAAP,GAAe,GAPoB;GAQlCN,MAAMO,SAAP,GAAmB;CARrB;;ACFA,MAAMG,kBAAmC;UAC/B,QAD+B;aAE5B,QAF4B;gBAGzB;CAHhB;;ACJA;AAEA,AAWA,MAAMC,mBAAqC;;QAEnC;UAAQ,mBAAR;WAAoC;GAFD;UAGjC;UAAQ,oBAAR;WAAqC;GAHJ;aAI9B;UAAQ,4BAAR;WAA6C;GAJf;WAKhC;UACD,6CADC;WAEA;GAPgC;iBAS1B;UAAQ,+BAAR;WAAgD;GATtB;SAWlC;UAAQ,cAAR;WAA+B;GAXG;OAYpC;UAAQ,gBAAR;WAAiC;GAZG;SAalC;UAAQ,gBAAR;WAAiC;GAbC;UAcjC;UAAQ,gBAAR;WAAiC;GAdA;QAenC;UAAQ,gBAAR;WAAiC;GAfE;WAgBhC;UAAQ,gBAAR;WAAiC;GAhBD;QAiBnC;UAAQ,gBAAR;WAAiC;GAjBE;SAkBlC;UAAQ,cAAR;WAA+B;GAlBG;QAmBnC;UAAQ,aAAR;WAA8B;GAnBK;WAqBhC;UAAQ,mBAAR;WAAoC;GArBJ;SAsBlC;UAAQ,qBAAR;WAAsC;GAtBJ;WAuBhC;UAAQ,qBAAR;WAAsC;GAvBN;YAwB/B;UAAQ,qBAAR;WAAsC;GAxBP;UAyBjC;UAAQ,qBAAR;WAAsC;GAzBL;aA0B9B;UAAQ,qBAAR;WAAsC;GA1BR;UA2BjC;UAAQ,qBAAR;WAAsC;GA3BL;WA4BhC;UAAQ,mBAAR;WAAoC;GA5BJ;UA8BjC;UAAS,WAAUC,gBAAUC,MAAO,EAApC;WAA8C;GA9Bb;aA+B9B;UAAS,WAAUD,gBAAUE,SAAU,EAAvC;WAAiD;GA/BnB;gBAgC3B;UAAS,WAAUF,gBAAUE,SAAU,EAAvC;WAAiD;;CAhCjE;;ACbA;AACA;AAYA,MAAMC,YAAqB,SAArBA,SAAqB,CAACC,MAAD,EAAiBC,KAAjB;SAA2CA,KAA3C;CAA3B;;AAuCA,SAASC,YAAT,CAAsBC,GAAtB,EAAgC;MAC1B;WACKC,KAAKC,SAAL,CAAeF,GAAf,EAAoBG,OAApB,CAA4B,MAA5B,EAAoC,IAApC,CAAP;GADF,CAEE,OAAOC,CAAP,EAAU;WACH,YAAP;;;;AAIJ,MAAMC,wBAAwB,SAAxBA,qBAAwB,CAACP,KAAD;SAAoB;iBAAeA,KAAf;oBAAsCA;GAA1D;CAA9B;;AAEA,SAASQ,mBAAT,CACER,KADF,EAEES,OAFF,EAGEV,MAHF,EAIE;SAAA;OAAA;UAAA;;CAJF,EAKE;QACMW,cAAc,OAAOV,KAA3B;;MAEI,CAACD,MAAL,EAAa;QACPC,SAAS,IAAb,EAAmB;eACR,CAAC,MAAD,CAAT;KADF,MAEO;cACGU,WAAR;aACO,SAAL;mBACW,CAAC,OAAD,CAAT;;;aAEG,QAAL;mBACW,CAAC,QAAD,CAAT;;;aAEG,QAAL;mBACW,CAAC,QAAD,CAAT;;;aAEG,QAAL;mBACW,CAAC,SAAD,CAAT;;;;;;MAMJC,WAAJ;;MACIX,UAAU,IAAd,EAAoB;kBACJ,MAAd;GADF,MAEO,IAAIA,UAAUY,SAAd,EAAyB;kBAChB,WAAd;GADK,MAEA,IAAIF,gBAAgB,SAApB,EAA+B;kBACtBV,MAAMa,QAAN,EAAd;GADK,MAEA,IAAIb,MAAMc,WAAN,KAAsBC,MAA1B,EAAkC;QACnCC,SAASC,QAAb,EAAuB;oBACP,aAAd;KADF,MAEO;aACEC,qBAAqBlB,KAArB,EAA4BS,OAA5B,EAAqCG,SAArC,EAAgD;eAAA;eAE9CI,QAAQ,CAFsC;gBAAA;;OAAhD,CAAP;;GAJG,MAWA,IAAIG,MAAMC,OAAN,CAAcpB,KAAd,CAAJ,EAA0B;QAC3BgB,SAASC,QAAb,EAAuB;oBACP,YAAd;KADF,MAEO;aACEI,oBAAoBrB,KAApB,EAA2BS,OAA3B,EAAoC;eAAA;eAAkBO,QAAQ,CAA1B;gBAAA;;OAApC,CAAP;;GAJG,MAMA,IAAIhB,iBAAiBsB,KAArB,EAA4B;UAC3BC,QAAQvB,MAAMuB,KAApB;kBACcA,SAASA,MAAMC,UAAN,CAAiBxB,MAAMyB,OAAvB,CAAT,GAA2CF,KAA3C,GAAoD,GAAEvB,MAAMyB,OAAQ,KAAIF,KAAM,EAA5F;GAFK,MAGA,IAAIvB,iBAAiB0B,GAArB,EAA0B;UACzBC,OAAO3B,MAAMc,WAAN,CAAkBa,IAA/B;;QACIX,SAASC,QAAb,EAAuB;oBACN,IAAGU,IAAK,MAAvB;KADF,MAEO;aACEC,kBAAkBD,IAAlB,EAAwB3B,KAAxB,EAA+BS,OAA/B,EAAwC;eAAA;eAEtCO,QAAQ,CAF8B;gBAAA;;OAAxC,CAAP;;GALG,MAYA,IAAIhB,iBAAiB6B,GAArB,EAA0B;UACzBF,OAAO3B,MAAMc,WAAN,CAAkBa,IAA/B;;QACIX,SAASC,QAAb,EAAuB;oBACN,IAAGU,IAAK,MAAvB;KADF,MAEO;aACEG,kBAAkBH,IAAlB,EAAwB3B,KAAxB,EAA+BS,OAA/B,EAAwC;eAAA;eAEtCO,QAAQ,CAF8B;gBAAA;;OAAxC,CAAP;;GALG,MAYA,IAAIhB,iBAAiB+B,OAArB,EAA8B;kBACrB,cAAd;GADK,MAEA,IAAI/B,iBAAiBgC,OAArB,EAA8B;kBACrB,cAAd;GADK,MAEA;kBACS/B,aAAaD,KAAb,CAAd;;;QAGIiC,iBAAiBxB,QAAQV,MAAR,EAAgBY,WAAhB,CAAvB;SAEO;eAAA;;GAAP;;;AAQF,MAAMuB,oBAA+B,SAA/BA,iBAA+B,CACnCC,GADmC,EAEnC1B,OAFmC,EAIlB;MACb,CAAC0B,GAAL,EAAU,OAAO;eAAa,EAAb;kBAA+B;GAAtC;SACH;eACO,GAAEA,GAAI,IADb;kBAES1B,QAAQ,CAAC,YAAD,EAAe,MAAf,CAAR,EAAiC,GAAE0B,GAAI,GAAvC,IAA6C;GAF7D;CANF;;AAYA,MAAMC,uBAAkC,SAAlCA,oBAAkC,CACtCD,GADsC,EAEtC1B,OAFsC,EAGtC4B,oBAHsC,EAIrB;QACX;eAAA;;MAAkC7B,oBACtC2B,GADsC,EAEtCrC,SAFsC,EAGtCc,SAHsC,EAItCyB,oBAJsC,CAAxC;SAMO;eACM1B,cAAc,MADpB;kBAESF,QAAQ,CAAC,YAAD,EAAe,MAAf,CAAR,EAAiC,GAAEwB,cAAe,GAAlD,IAAwD;GAFxE;CAXF;;AAiBA,MAAMK,yBAAyB,SAAzBA,sBAAyB,CAC7BC,MAD6B,EAE7B9B,OAF6B,EAG7B+B,YAH6B,EAI7B;SAAA;OAAA;UAAA;;CAJ6B,EAK7B;QAAA;QAAA;sBAGsB,GAHtB;cAIcN;CATe,EAW1B;MACCO,YAAY,KAAhB;;QACMC,qBAAqB,SAArBA,kBAAqB;WAAMjC,QAAQ,CAAC,MAAD,CAAR,MAAN;GAA3B;;QAEMkC,iBAAiBJ,OAAOK,MAAP,GAAgB,CAAvC;QACMC,kBAAyCN,OAAOO,GAAP,CAC7C,UAAC;OAAA;;GAAD,EAA2CC,KAA3C,EAA6D;UAErDV,uBAAuB;aAAA;aADXrB,QAAQ,CACG;cAAA;;KAA7B,CAF2D;;UAKrD;eAAA;;QAA8BgC,UAAUb,GAAV,EAAe1B,OAAf,EAAwB4B,oBAAxB,CAApC;QAEI;iBAAA;;QAAkC7B,oBACpCR,KADoC,EAEpCS,OAFoC,EAGpC0B,OAAOK,YAAP,IAAuBA,aAAaL,GAAb,CAHa,EAIpCE,oBAJoC,CAAtC;;QAOI1B,gBAAgBA,YAAYiC,MAAZ,GAAqB,EAArB,IAA2BjC,YAAYsC,OAAZ,CAAoB,IAApB,MAA8B,CAAC,CAA1E,CAAJ,EAAkF;kBACpE,IAAZ;oBACctC,YAAYN,OAAZ,CAAoB,KAApB,EAA4B,KAAI6C,OAAQ,EAAxC,CAAd;uBACiBjB,eAAe5B,OAAf,CAAuB,KAAvB,EAA+B,KAAI6C,OAAQ,EAA3C,CAAjB;;;WAGK;mBACQC,YAAYxC,WAAZ,IAA2BoC,UAAUJ,cAAV,GAA2B,EAA3B,MAA3B,CADR;;sBAIHS,eAAenB,cAAf,IAAiCc,UAAUJ,cAAV,GAA2B,EAA3B,GAAgCD,oBAAjE,CAJG;;KAAP;GArB2C,CAA/C;SA+BO;iBAEHW,SACAR,gBACGC,GADH,CACOL,YAAY;aAAM,KAAIS,OAAQ,GAAEI,EAAE3C,WAAY,EAAlC;KAAZ,GAAkD;aAAM4C,GAAG5C,WAAT;KADzD,EAEG6C,IAFH,CAEQf,YAAY,IAAZ,GAAmB,GAF3B,CADA,GAIAgB,MANG;;oBASF,GAAEJ,MAAO,GAAEZ,YAAY,EAAZ,GAAiBiB,iBAAkB,EAA/C,GACAb,gBACGC,GADH,CACOL,YAAY;aAAM,KAAIS,OAAQ,GAAEI,EAAErB,cAAe,EAArC;KAAZ,GAAqD;aAAKqB,EAAErB,cAAP;KAD5D,EAEGuB,IAFH,CAEQf,YAAY,EAAZ,GAAiB,GAFzB,CADA,GAIC,GAAEA,YAAY,KAAZ,GAAoBiB,iBAAkB,GAAED,MAAO;GAbtD;CA/CF;;AAgEA,SAASvC,oBAAT,CACEyC,MADF,EAEElD,OAFF,EAGE+B,YAHF,EAIE;SAAA;OAAA;UAAA;;CAJF,EAKE;MACIoB,QAAQC,GAAR,CAAYF,MAAZ,CAAJ,EAAyB;WAChBpD,sBAAsB,mBAAtB,CAAP;;;QAGIuD,OAAsB/C,OAAO+C,IAAP,CAAYH,MAAZ,CAA5B;;MACIG,KAAKlB,MAAL,KAAgB,CAApB,EAAuB;WACdrC,sBAAsB,IAAtB,CAAP;;;UAGMwD,GAAR,CAAYJ,MAAZ;QAEMK,SAAS1B,uBACbwB,KAAKhB,GAAL,CAAS;WAAQ;SAAA;aAAca,OAAOxB,GAAP;KAAtB;GAAT,CADa,EAEb1B,OAFa,EAGb+B,YAHa,EAIb;WAAA;SAAA;YAAA;;GAJa,EAKb;YAAU,GAAV;YAAuB;GALV,CAAf;UAQQyB,MAAR,CAAeN,MAAf;SAEOK,MAAP;;;AAGF,SAASpC,iBAAT,CACED,IADF,EAEEmB,GAFF,EAGErC,OAHF,EAIE;SAAA;OAAA;UAAA;;CAJF,EAKE;MACImD,QAAQC,GAAR,CAAYf,GAAZ,CAAJ,EAAsB;WACbvC,sBAAuB,aAAYoB,IAAK,GAAxC,CAAP;;;QAGImC,OAAO3C,MAAM+C,IAAN,CAAWpB,IAAIgB,IAAJ,EAAX,CAAb;;MACIA,KAAKlB,MAAL,KAAgB,CAApB,EAAuB;WACdrC,sBAAuB,GAAEoB,IAAK,KAA9B,CAAP;;;UAGMoC,GAAR,CAAYjB,GAAZ;QAEMkB,SAAS1B,uBACbwB,KAAKhB,GAAL,CAAS;WAAQ;SAAA;aAAcA,IAAIqB,GAAJ,CAAQhC,GAAR;KAAtB;GAAT,CADa,EAEb1B,OAFa,EAGbG,SAHa,EAIb;WAAA;SAAA;YAAA;;GAJa,EAKb;YAAW,GAAEe,IAAK,IAAlB;YAA+B,GAA/B;eAA+CS;GALlC,CAAf;UAQQ6B,MAAR,CAAenB,GAAf;SAEOkB,MAAP;;;AAGF,SAAS3C,mBAAT,CACE+C,KADF,EAEE3D,OAFF,EAGE;SAAA;OAAA;UAAA;;CAHF,EAIE;MACImD,QAAQC,GAAR,CAAYO,KAAZ,CAAJ,EAAwB;WACf7D,sBAAsB,kBAAtB,CAAP;;;MAGE6D,MAAMxB,MAAN,KAAiB,CAArB,EAAwB;WACfrC,sBAAsB,IAAtB,CAAP;;;UAGMwD,GAAR,CAAYK,KAAZ;QAEMJ,SAAS1B,uBACb8B,MAAMtB,GAAN,CAAU,UAAC9C,KAAD;WAAiB;WAAOY,SAAP;;KAAjB;GAAV,CADa,EAEbH,OAFa,EAGbG,SAHa,EAIb;WAAA;SAAA;YAAA;;GAJa,EAKb;YAAU,GAAV;YAAuB,GAAvB;uBAA+C;GALlC,CAAf;UAQQqD,MAAR,CAAeG,KAAf;SAEOJ,MAAP;;;AAGF,SAASlC,iBAAT,CACEH,IADF,EAEE0C,GAFF,EAGE5D,OAHF,EAIE;SAAA;OAAA;UAAA;;CAJF,EAKE;MACImD,QAAQC,GAAR,CAAYQ,GAAZ,CAAJ,EAAsB;WACb9D,sBAAuB,aAAYoB,IAAK,GAAxC,CAAP;;;QAGIY,SAASpB,MAAM+C,IAAN,CAAWG,IAAI9B,MAAJ,EAAX,CAAf;;MACIA,OAAOK,MAAP,KAAkB,CAAtB,EAAyB;WAChBrC,sBAAuB,GAAEoB,IAAK,KAA9B,CAAP;;;UAGMoC,GAAR,CAAYM,GAAZ;QAEML,SAAS1B,uBACbC,OAAOO,GAAP,CAAW;WAAU;WAAOlC,SAAP;;KAAV;GAAX,CADa,EAEbH,OAFa,EAGbG,SAHa,EAIb;WAAA;SAAA;YAAA;;GAJa,EAKb;YAAW,GAAEe,IAAK,IAAlB;YAA+B;GALlB,CAAf;UAQQsC,MAAR,CAAeI,GAAf;SAEOL,MAAP;;;AAGF,AAAe,SAASM,YAAT,CACbX,MADa,EAEblD,UAAmBX,SAFN,EAGb0C,YAHa,EAIb;YAAY,IAAZ;aAA6B;IAA4B,EAJ5C,EAKb;QACM;oBAAkBwB;MAAW9C,qBAAqByC,MAArB,EAA6BlD,OAA7B,EAAsC+B,YAAtC,EAAoD;WAAA;YAAA;WAG9E,CAH8E;aAI5E,IAAIX,GAAJ;GAJwB,CAAnC;;MAOImC,WAAW,IAAf,EAAqB;WACZ,EAAP;;;SAGKA,MAAP;;;AC/Xa,SAASO,oBAAT,CAAiCC,MAAjC,EAAoDC,KAApD,EAAoE;QAC3EC,QAAuB,EAA7B;;MAEIF,OAAOG,WAAX,EAAwB;UAChBC,IAAN,CAAWH,MAAM,CAAC,YAAD,CAAN,EAAsBD,OAAOG,WAA7B,CAAX;GADF,MAEO,IAAIH,OAAOrC,GAAX,EAAgB;UACfyC,IAAN,CAAWH,MAAM,CAAC,YAAD,CAAN,EAAsBD,OAAOrC,GAA7B,CAAX;;;MAGEqC,OAAOK,QAAX,EAAqB;UACbD,IAAN,CAAWH,MAAM,CAAC,MAAD,EAAS,MAAT,CAAN,EAAwBD,OAAOK,QAAP,CAAgBC,YAAhB,GAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAxB,CAAX;;;;MAIEtD,UAAkB+C,OAAOQ,MAAP,IAAiBzF,cAAciF,OAAOS,KAArB,CAAvC;QACMlF,SAASyE,OAAOzE,MAAP,IAAiBjB,cAAc0F,OAAOS,KAArB,CAAhC;;MAEIT,OAAO/C,OAAX,EAAoB;QACdA,OAAJ,EAAa;iBACC,IAAG+C,OAAO/C,OAAQ,EAA9B;KADF,MAEO;gBACK+C,OAAO/C,OAAjB;;;;MAIAA,OAAJ,EAAa;QACP1B,MAAJ,EAAY;gBACA0E,MAAM1E,MAAN,EAAc0B,OAAd,CAAV;;;UAEImD,IAAN,CAAWnD,OAAX;;;QAGIyD,qBAAqB,SAArBA,kBAAqB,CACzB/C,GADyB,EAEzBwB,MAFyB,EAGzB5D,MAHyB,EAItB;QACC,CAAC4D,MAAL,EAAa;;;;UAIPwB,eAAeb,aAAaX,MAAb,EAAqBc,KAArB,EAA4B1E,MAA5B,CAArB;;QAEI,CAACoF,YAAL,EAAmB;;;;UAIbP,IAAN,CAAWO,YAAX;GAfF;;qBAkBmB,UAAnB,EAA+BX,OAAOY,QAAtC,EAAgDZ,OAAOa,cAAvD;qBACmB,OAAnB,EAA4Bb,OAAOc,KAAnC,EAA0C1E,SAA1C;qBACmB,SAAnB,EAA8B4D,OAAOe,OAArC,EAA8C3E,SAA9C;SAEO8D,MAAMlB,IAAN,CAAW,GAAX,CAAP;;;;;"}