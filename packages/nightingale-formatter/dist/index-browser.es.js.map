{"version":3,"file":"index-browser.es.js","sources":["../src/levelToStyles.ts","../src/levelToSymbol.ts","../src/styleToHexColor.ts","../src/styleToHtmlStyle.ts","../src/formatObject.ts","../src/formatRecordToString.ts"],"sourcesContent":["import Level from 'nightingale-levels';\n\nexport interface LevelToStyles {\n  readonly [level: number]: string[];\n}\n\nconst levelToStyles: LevelToStyles = {\n  [Level.TRACE]: ['gray'],\n  [Level.DEBUG]: ['gray'],\n  // [Level.INFO]: ['gray'],\n  [Level.WARN]: ['yellow'],\n  [Level.ERROR]: ['red', 'bold'],\n  [Level.CRITICAL]: ['red', 'bold'],\n  [Level.FATAL]: ['bgRed', 'white'],\n  [Level.EMERGENCY]: ['bgRed', 'white'],\n};\n\nexport default levelToStyles;\n","import Level from 'nightingale-levels';\n\nexport interface LevelToSymbol {\n  readonly [level: number]: string;\n}\n\nconst levelToSymbol: LevelToSymbol = {\n  [Level.TRACE]: '•',\n  [Level.DEBUG]: '•',\n  [Level.INFO]: '→',\n  [Level.WARN]: '⚠',\n  [Level.ERROR]: '✖',\n  [Level.CRITICAL]: '!',\n  [Level.FATAL]: '‼',\n  [Level.EMERGENCY]: '‼',\n};\n\nexport default levelToSymbol;\n","export interface StyleToHexColor {\n  readonly [key: string]: string;\n}\n\nconst styleToHexColor: StyleToHexColor = {\n  orange: 'ff5f00',\n  grayLight: '808080',\n  'gray-light': '808080',\n};\n\nexport default styleToHexColor;\n","import hexColors from './styleToHexColor';\n\nexport interface HtmlStyle {\n  readonly open: string;\n  readonly close: string;\n}\n\nexport interface StyleToHtmlStyle {\n  readonly [key: string]: HtmlStyle;\n}\n\nconst styleToHtmlStyle: StyleToHtmlStyle = {\n  // text style\n  bold: { open: 'font-weight: bold', close: 'font-weight: normal' },\n  italic: { open: 'font-style: italic', close: 'font-style: normal' },\n  underline: {\n    open: 'text-decoration: underline',\n    close: 'text-decoration: none',\n  },\n  inverse: {\n    open: 'unicode-bidi: bidi-override; direction: rtl',\n    close: 'unicode-bidi: normal; direction: ltr',\n  },\n  strikethrough: {\n    open: 'text-decoration: line-through',\n    close: 'text-decoration: none',\n  },\n\n  black: { open: 'color: black', close: 'color: initial' },\n  red: { open: 'color: #ff0020', close: 'color: initial' },\n  green: { open: 'color: #00b317', close: 'color: initial' },\n  yellow: { open: 'color: #ffcc00', close: 'color: initial' },\n  blue: { open: 'color: #00a0ff', close: 'color: initial' },\n  magenta: { open: 'color: #ff00a0', close: 'color: initial' },\n  cyan: { open: 'color: #00cfd8', close: 'color: initial' },\n  white: { open: 'color: white', close: 'color: initial' },\n  gray: { open: 'color: gray', close: 'color: initial' },\n\n  bgBlack: { open: 'background: black', close: 'background: initial' },\n  bgRed: { open: 'background: #ff0020', close: 'background: initial' },\n  bgGreen: { open: 'background: #00b317', close: 'background: initial' },\n  bgYellow: { open: 'background: #ffcc00', close: 'background: initial' },\n  bgBlue: { open: 'background: #00a0ff', close: 'background: initial' },\n  bgMagenta: { open: 'background: #ff00a0', close: 'background: initial' },\n  bgCyan: { open: 'background: #00cfd8', close: 'background: initial' },\n  bgWhite: { open: 'background: white', close: 'background: initial' },\n\n  orange: { open: `color: #${hexColors.orange}`, close: 'color: initial' },\n  grayLight: {\n    open: `color: #${hexColors.grayLight}`,\n    close: 'color: initial',\n  },\n  'gray-light': {\n    open: `color: #${hexColors.grayLight}`,\n    close: 'color: initial',\n  },\n};\n\nexport default styleToHtmlStyle;\n","/* eslint-disable max-lines, no-useless-concat, prefer-template, no-use-before-define, @typescript-eslint/no-use-before-define */\nimport { Styles } from 'nightingale-types';\n\nexport interface FormatObjectOptions {\n  padding?: string;\n  maxDepth?: number;\n}\n\nexport type StyleFn = (styles: Styles, value: string) => string;\n\nexport interface ObjectStyles {\n  [key: string]: Styles;\n}\n\nconst noStyleFn: StyleFn = (styles: Styles, value: string): string => value;\n\ninterface InternalFormatParams {\n  padding: string;\n  depth: number;\n  maxDepth: number;\n  objects: Set<any>;\n}\n\ninterface FormattedKey {\n  stringKey: string;\n  formattedKey: string;\n}\n\ntype FormatKey = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n) => FormattedKey;\n\ninterface Value {\n  key: any;\n  value: any;\n}\n\ninterface FormattedValue {\n  stringValue: string;\n  formattedValue: string;\n}\n\ntype Values = Value[];\n\ninterface InternalFormatIteratorParams {\n  prefix: string;\n  suffix: string;\n  prefixSuffixSpace?: string;\n  formatKey?: FormatKey;\n}\n\nfunction tryStringify(arg: any) {\n  try {\n    return JSON.stringify(arg).replace(/\\\\n/g, '\\n');\n  } catch (_) {\n    return '[Circular]';\n  }\n}\n\nconst sameRawFormattedValue = (value: string) => ({\n  stringValue: value,\n  formattedValue: value,\n});\n\nfunction internalFormatValue(\n  value: any,\n  styleFn: StyleFn,\n  styles: Styles,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value == null) {\n      styles = ['cyan'];\n    } else {\n      switch (typeofValue) {\n        case 'boolean':\n          styles = ['green'];\n          break;\n        case 'number':\n          styles = ['yellow'];\n          break;\n        case 'string':\n          styles = ['orange'];\n          break;\n        case 'symbol':\n          styles = ['magenta'];\n          break;\n      }\n    }\n  }\n\n  let stringValue;\n  if (value === null) {\n    stringValue = 'null';\n  } else if (value === undefined) {\n    stringValue = 'undefined';\n  } else if (typeofValue === 'boolean') {\n    stringValue = value.toString();\n  } else if (value.constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = '{Object...}';\n    } else {\n      return internalFormatObject(value, styleFn, undefined, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = '[Array...]';\n    } else {\n      return internalFormatArray(value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Error) {\n    const stack = value.stack;\n    stringValue = stack?.startsWith(value.message)\n      ? stack\n      : `${value.message}\\n${stack}`;\n  } else if (value instanceof Map) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatMap(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Set) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatSet(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof WeakMap) {\n    stringValue = '{WeakMap...}';\n  } else if (value instanceof WeakSet) {\n    stringValue = '{WeakSet...}';\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = ',';\n\nconst internalFormatKey: FormatKey = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  if (!key) return { stringKey: '', formattedKey: '' };\n  return {\n    stringKey: `${key}: `,\n    formattedKey: styleFn(['gray-light', 'bold'], `${key}:`) + ' ',\n  };\n};\n\nconst internalFormatMapKey: FormatKey = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  const { stringValue, formattedValue } = internalFormatValue(\n    key,\n    noStyleFn,\n    undefined,\n    internalFormatParams,\n  );\n  return {\n    stringKey: stringValue + ' => ',\n    formattedKey: styleFn(['gray-light', 'bold'], `${formattedValue}:`) + ' ',\n  };\n};\n\nconst internalFormatIterator = (\n  values: Values,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n  {\n    prefix,\n    suffix,\n    prefixSuffixSpace = ' ',\n    formatKey = internalFormatKey,\n  }: InternalFormatIteratorParams,\n) => {\n  let breakLine = false;\n  const formattedSeparator = () => styleFn(['gray'], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  const formattedValues: FormattedValue[] = values.map(\n    ({ key, value }, index: number) => {\n      const nextDepth = depth + 1;\n      const internalFormatParams = {\n        padding,\n        depth: nextDepth,\n        maxDepth,\n        objects,\n      };\n\n      // key must be formatted before value (browser-formatter needs order)\n      const { stringKey, formattedKey } = formatKey(\n        key,\n        styleFn,\n        internalFormatParams,\n      );\n\n      let { stringValue, formattedValue } = internalFormatValue(\n        value,\n        styleFn,\n        key && objectStyles && objectStyles[key],\n        internalFormatParams,\n      );\n\n      if (\n        stringValue &&\n        (stringValue.length > 80 || stringValue.includes('\\n'))\n      ) {\n        breakLine = true;\n        stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n        formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n      }\n\n      return {\n        stringValue:\n          stringKey + stringValue + (index === valuesMaxIndex ? '' : separator),\n        // eslint-disable-next-line no-useless-concat\n        formattedValue:\n          formattedKey +\n          formattedValue +\n          (index === valuesMaxIndex ? '' : formattedSeparator()),\n        // note: we need to format the separator for each values for browser-formatter\n      };\n    },\n  );\n\n  return {\n    stringValue:\n      prefix +\n      formattedValues\n        .map(\n          breakLine\n            ? (v) => `\\n${padding}${v.stringValue}`\n            : (fv) => fv.stringValue,\n        )\n        .join(breakLine ? '\\n' : ' ') +\n      suffix,\n    // eslint-disable-next-line prefer-template\n    formattedValue:\n      `${prefix}${breakLine ? '' : prefixSuffixSpace}` +\n      formattedValues\n        .map(\n          breakLine\n            ? (v) => `\\n${padding}${v.formattedValue}`\n            : (v) => v.formattedValue,\n        )\n        .join(breakLine ? '' : ' ') +\n      `${breakLine ? ',\\n' : prefixSuffixSpace}${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object: { [key: string]: any },\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  if (objects.has(object)) {\n    return sameRawFormattedValue('{Circular Object}');\n  }\n\n  const keys: string[] = Object.keys(object);\n  if (keys.length === 0) {\n    return sameRawFormattedValue('{}');\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: object[key] })),\n    styleFn,\n    objectStyles,\n    { padding, depth, maxDepth, objects },\n    { prefix: '{', suffix: '}' },\n  );\n\n  objects.delete(object);\n\n  return result;\n}\n\nfunction internalFormatMap(\n  name: string,\n  map: Map<any, any>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  if (objects.has(map)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const keys = [...map.keys()];\n  if (keys.length === 0) {\n    return sameRawFormattedValue(`${name} {}`);\n  }\n\n  objects.add(map);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: map.get(key) })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} {`, suffix: '}', formatKey: internalFormatMapKey },\n  );\n\n  objects.delete(map);\n\n  return result;\n}\n\nfunction internalFormatArray(\n  array: any[],\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  if (objects.has(array)) {\n    return sameRawFormattedValue('{Circular Array}');\n  }\n\n  if (array.length === 0) {\n    return sameRawFormattedValue('[]');\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map((value: any) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: '[', suffix: ']', prefixSuffixSpace: '' },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nfunction internalFormatSet(\n  name: string,\n  set: Set<any>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n) {\n  if (objects.has(set)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const values = [...set.values()];\n  if (values.length === 0) {\n    return sameRawFormattedValue(`${name} []`);\n  }\n\n  objects.add(set);\n\n  const result = internalFormatIterator(\n    values.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} [`, suffix: ']' },\n  );\n\n  objects.delete(set);\n\n  return result;\n}\n\nexport default function formatObject(\n  object: { [key: string]: any },\n  styleFn: StyleFn = noStyleFn,\n  objectStyles?: ObjectStyles,\n  { padding = '  ', maxDepth = 10 }: FormatObjectOptions = {},\n) {\n  const { formattedValue: result } = internalFormatObject(\n    object,\n    styleFn,\n    objectStyles,\n    {\n      padding,\n      maxDepth,\n      depth: 0,\n      objects: new Set(),\n    },\n  );\n\n  if (result === '{}') {\n    return '';\n  }\n\n  return result;\n}\n","/* eslint-disable no-unused-vars */\nimport { LogRecord, Metadata } from 'nightingale-types';\nimport levelToSymbol from './levelToSymbol';\nimport levelToStyles from './levelToStyles';\nimport formatObject, { StyleFn, ObjectStyles } from './formatObject';\n\nexport default function formatRecordToString<T extends Metadata>(\n  record: LogRecord<T>,\n  style: StyleFn,\n) {\n  const parts: string[] = [];\n\n  if (record.displayName) {\n    parts.push(style(['gray-light'], record.displayName));\n  } else if (record.key) {\n    parts.push(style(['gray-light'], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(\n      style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]),\n    );\n    /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message: string = record.symbol || levelToSymbol[record.level];\n  const styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  const formatRecordObject = (\n    key: string,\n    object: object | undefined,\n    styles: ObjectStyles | undefined,\n  ) => {\n    if (!object) {\n      return;\n    }\n\n    const stringObject = formatObject(object, style, styles);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  };\n\n  formatRecordObject('metadata', record.metadata, record.metadataStyles);\n  formatRecordObject('extra', record.extra, undefined);\n  formatRecordObject('context', record.context, undefined);\n\n  return parts.join(' ');\n}\n"],"names":["levelToStyles","Level","TRACE","DEBUG","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","levelToSymbol","INFO","styleToHexColor","orange","grayLight","styleToHtmlStyle","bold","open","close","italic","underline","inverse","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","hexColors","noStyleFn","styles","value","tryStringify","arg","JSON","stringify","replace","_","sameRawFormattedValue","stringValue","formattedValue","internalFormatValue","styleFn","padding","depth","maxDepth","objects","typeofValue","undefined","toString","constructor","Object","internalFormatObject","Array","isArray","internalFormatArray","Error","stack","startsWith","message","Map","name","internalFormatMap","Set","internalFormatSet","WeakMap","WeakSet","separator","internalFormatKey","key","stringKey","formattedKey","internalFormatMapKey","internalFormatParams","internalFormatIterator","values","objectStyles","prefix","suffix","prefixSuffixSpace","formatKey","breakLine","formattedSeparator","valuesMaxIndex","length","formattedValues","map","index","includes","v","fv","join","object","has","keys","add","result","delete","get","array","set","formatObject","formatRecordToString","record","style","parts","displayName","push","datetime","toTimeString","split","symbol","level","formatRecordObject","stringObject","metadata","metadataStyles","extra","context"],"mappings":"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"}